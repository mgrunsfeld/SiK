                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Jul 23 11:34:34 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module packet
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _timer2_tick
                                     13 	.globl _printf_end_capture
                                     14 	.globl _printf_start_capture
                                     15 	.globl _at_command
                                     16 	.globl _param_print
                                     17 	.globl _serial_read_available
                                     18 	.globl _serial_read_buf
                                     19 	.globl _serial_peekx
                                     20 	.globl _serial_peek2
                                     21 	.globl _serial_peek
                                     22 	.globl _serial_read
                                     23 	.globl _memcmp
                                     24 	.globl _memcpy
                                     25 	.globl _SDN
                                     26 	.globl _NSS1
                                     27 	.globl _IRQ
                                     28 	.globl _PIN_ENABLE
                                     29 	.globl _PIN_CONFIG
                                     30 	.globl _LED_GREEN
                                     31 	.globl _LED_RED
                                     32 	.globl _SPI0EN
                                     33 	.globl _TXBMT0
                                     34 	.globl _NSS0MD0
                                     35 	.globl _NSS0MD1
                                     36 	.globl _RXOVRN0
                                     37 	.globl _MODF0
                                     38 	.globl _WCOL0
                                     39 	.globl _SPIF0
                                     40 	.globl _AD0CM0
                                     41 	.globl _AD0CM1
                                     42 	.globl _AD0CM2
                                     43 	.globl _AD0WINT
                                     44 	.globl _AD0BUSY
                                     45 	.globl _AD0INT
                                     46 	.globl _BURSTEN
                                     47 	.globl _AD0EN
                                     48 	.globl _CCF0
                                     49 	.globl _CCF1
                                     50 	.globl _CCF2
                                     51 	.globl _CCF3
                                     52 	.globl _CCF4
                                     53 	.globl _CCF5
                                     54 	.globl _CR
                                     55 	.globl _CF
                                     56 	.globl _P
                                     57 	.globl _F1
                                     58 	.globl _OV
                                     59 	.globl _RS0
                                     60 	.globl _RS1
                                     61 	.globl _F0
                                     62 	.globl _AC
                                     63 	.globl _CY
                                     64 	.globl _T2XCLK
                                     65 	.globl _T2RCLK
                                     66 	.globl _TR2
                                     67 	.globl _T2SPLIT
                                     68 	.globl _TF2CEN
                                     69 	.globl _TF2LEN
                                     70 	.globl _TF2L
                                     71 	.globl _TF2H
                                     72 	.globl _SI
                                     73 	.globl _ACK
                                     74 	.globl _ARBLOST
                                     75 	.globl _ACKRQ
                                     76 	.globl _STO
                                     77 	.globl _STA
                                     78 	.globl _TXMODE
                                     79 	.globl _MASTER
                                     80 	.globl _PX0
                                     81 	.globl _PT0
                                     82 	.globl _PX1
                                     83 	.globl _PT1
                                     84 	.globl _PS0
                                     85 	.globl _PT2
                                     86 	.globl _PSPI0
                                     87 	.globl _SPI1EN
                                     88 	.globl _TXBMT1
                                     89 	.globl _NSS1MD0
                                     90 	.globl _NSS1MD1
                                     91 	.globl _RXOVRN1
                                     92 	.globl _MODF1
                                     93 	.globl _WCOL1
                                     94 	.globl _SPIF1
                                     95 	.globl _EX0
                                     96 	.globl _ET0
                                     97 	.globl _EX1
                                     98 	.globl _ET1
                                     99 	.globl _ES0
                                    100 	.globl _ET2
                                    101 	.globl _ESPI0
                                    102 	.globl _EA
                                    103 	.globl _RI0
                                    104 	.globl _TI0
                                    105 	.globl _RB80
                                    106 	.globl _TB80
                                    107 	.globl _REN0
                                    108 	.globl _MCE0
                                    109 	.globl _S0MODE
                                    110 	.globl _CRC0VAL
                                    111 	.globl _CRC0INIT
                                    112 	.globl _CRC0SEL
                                    113 	.globl _IT0
                                    114 	.globl _IE0
                                    115 	.globl _IT1
                                    116 	.globl _IE1
                                    117 	.globl _TR0
                                    118 	.globl _TF0
                                    119 	.globl _TR1
                                    120 	.globl _TF1
                                    121 	.globl _PCA0CP4
                                    122 	.globl _PCA0CP0
                                    123 	.globl _PCA0
                                    124 	.globl _PCA0CP3
                                    125 	.globl _PCA0CP2
                                    126 	.globl _PCA0CP1
                                    127 	.globl _PCA0CP5
                                    128 	.globl _TMR2
                                    129 	.globl _TMR2RL
                                    130 	.globl _ADC0LT
                                    131 	.globl _ADC0GT
                                    132 	.globl _ADC0
                                    133 	.globl _TMR3
                                    134 	.globl _TMR3RL
                                    135 	.globl _TOFF
                                    136 	.globl _DP
                                    137 	.globl _VDM0CN
                                    138 	.globl _PCA0CPH4
                                    139 	.globl _PCA0CPL4
                                    140 	.globl _PCA0CPH0
                                    141 	.globl _PCA0CPL0
                                    142 	.globl _PCA0H
                                    143 	.globl _PCA0L
                                    144 	.globl _SPI0CN
                                    145 	.globl _EIP2
                                    146 	.globl _EIP1
                                    147 	.globl _SMB0ADM
                                    148 	.globl _SMB0ADR
                                    149 	.globl _P2MDIN
                                    150 	.globl _P1MDIN
                                    151 	.globl _P0MDIN
                                    152 	.globl _B
                                    153 	.globl _RSTSRC
                                    154 	.globl _PCA0CPH3
                                    155 	.globl _PCA0CPL3
                                    156 	.globl _PCA0CPH2
                                    157 	.globl _PCA0CPL2
                                    158 	.globl _PCA0CPH1
                                    159 	.globl _PCA0CPL1
                                    160 	.globl _ADC0CN
                                    161 	.globl _EIE2
                                    162 	.globl _EIE1
                                    163 	.globl _FLWR
                                    164 	.globl _IT01CF
                                    165 	.globl _XBR2
                                    166 	.globl _XBR1
                                    167 	.globl _XBR0
                                    168 	.globl _ACC
                                    169 	.globl _PCA0PWM
                                    170 	.globl _PCA0CPM4
                                    171 	.globl _PCA0CPM3
                                    172 	.globl _PCA0CPM2
                                    173 	.globl _PCA0CPM1
                                    174 	.globl _PCA0CPM0
                                    175 	.globl _PCA0MD
                                    176 	.globl _PCA0CN
                                    177 	.globl _P0MAT
                                    178 	.globl _P2SKIP
                                    179 	.globl _P1SKIP
                                    180 	.globl _P0SKIP
                                    181 	.globl _PCA0CPH5
                                    182 	.globl _PCA0CPL5
                                    183 	.globl _REF0CN
                                    184 	.globl _PSW
                                    185 	.globl _P1MAT
                                    186 	.globl _PCA0CPM5
                                    187 	.globl _TMR2H
                                    188 	.globl _TMR2L
                                    189 	.globl _TMR2RLH
                                    190 	.globl _TMR2RLL
                                    191 	.globl _REG0CN
                                    192 	.globl _TMR2CN
                                    193 	.globl _P0MASK
                                    194 	.globl _ADC0LTH
                                    195 	.globl _ADC0LTL
                                    196 	.globl _ADC0GTH
                                    197 	.globl _ADC0GTL
                                    198 	.globl _SMB0DAT
                                    199 	.globl _SMB0CF
                                    200 	.globl _SMB0CN
                                    201 	.globl _P1MASK
                                    202 	.globl _ADC0H
                                    203 	.globl _ADC0L
                                    204 	.globl _ADC0TK
                                    205 	.globl _ADC0CF
                                    206 	.globl _ADC0MX
                                    207 	.globl _ADC0PWR
                                    208 	.globl _ADC0AC
                                    209 	.globl _IREF0CN
                                    210 	.globl _IP
                                    211 	.globl _FLKEY
                                    212 	.globl _FLSCL
                                    213 	.globl _PMU0CF
                                    214 	.globl _OSCICL
                                    215 	.globl _OSCICN
                                    216 	.globl _OSCXCN
                                    217 	.globl _SPI1CN
                                    218 	.globl _ONESHOT
                                    219 	.globl _EMI0TC
                                    220 	.globl _RTC0KEY
                                    221 	.globl _RTC0DAT
                                    222 	.globl _RTC0ADR
                                    223 	.globl _EMI0CF
                                    224 	.globl _EMI0CN
                                    225 	.globl _CLKSEL
                                    226 	.globl _IE
                                    227 	.globl _SFRPAGE
                                    228 	.globl _P2DRV
                                    229 	.globl _P2MDOUT
                                    230 	.globl _P1DRV
                                    231 	.globl _P1MDOUT
                                    232 	.globl _P0DRV
                                    233 	.globl _P0MDOUT
                                    234 	.globl _SPI0DAT
                                    235 	.globl _SPI0CKR
                                    236 	.globl _SPI0CFG
                                    237 	.globl _P2
                                    238 	.globl _CPT0MX
                                    239 	.globl _CPT1MX
                                    240 	.globl _CPT0MD
                                    241 	.globl _CPT1MD
                                    242 	.globl _CPT0CN
                                    243 	.globl _CPT1CN
                                    244 	.globl _SBUF0
                                    245 	.globl _SCON0
                                    246 	.globl _CRC0CNT
                                    247 	.globl _DC0CN
                                    248 	.globl _CRC0AUTO
                                    249 	.globl _DC0CF
                                    250 	.globl _TMR3H
                                    251 	.globl _CRC0FLIP
                                    252 	.globl _TMR3L
                                    253 	.globl _CRC0IN
                                    254 	.globl _TMR3RLH
                                    255 	.globl _CRC0CN
                                    256 	.globl _TMR3RLL
                                    257 	.globl _CRC0DAT
                                    258 	.globl _TMR3CN
                                    259 	.globl _P1
                                    260 	.globl _PSCTL
                                    261 	.globl _CKCON
                                    262 	.globl _TH1
                                    263 	.globl _TH0
                                    264 	.globl _TL1
                                    265 	.globl _TL0
                                    266 	.globl _TMOD
                                    267 	.globl _TCON
                                    268 	.globl _PCON
                                    269 	.globl _TOFFH
                                    270 	.globl _SPI1DAT
                                    271 	.globl _TOFFL
                                    272 	.globl _SPI1CKR
                                    273 	.globl _SPI1CFG
                                    274 	.globl _DPH
                                    275 	.globl _DPL
                                    276 	.globl _SP
                                    277 	.globl _P0
                                    278 	.globl _packet_inject_PARM_2
                                    279 	.globl _packet_is_duplicate_PARM_2
                                    280 	.globl _packet_get_next_PARM_2
                                    281 	.globl _packet_is_duplicate_PARM_3
                                    282 	.globl _seen_mavlink
                                    283 	.globl _packet_get_next
                                    284 	.globl _packet_is_resend
                                    285 	.globl _packet_is_injected
                                    286 	.globl _packet_force_resend
                                    287 	.globl _packet_set_max_xmit
                                    288 	.globl _packet_set_serial_speed
                                    289 	.globl _packet_is_duplicate
                                    290 	.globl _packet_ati5_inject
                                    291 	.globl _packet_at_inject
                                    292 	.globl _packet_inject
                                    293 ;--------------------------------------------------------
                                    294 ; special function registers
                                    295 ;--------------------------------------------------------
                                    296 	.area RSEG    (ABS,DATA)
      000000                        297 	.org 0x0000
                           000080   298 _P0	=	0x0080
                           000081   299 _SP	=	0x0081
                           000082   300 _DPL	=	0x0082
                           000083   301 _DPH	=	0x0083
                           000084   302 _SPI1CFG	=	0x0084
                           000085   303 _SPI1CKR	=	0x0085
                           000085   304 _TOFFL	=	0x0085
                           000086   305 _SPI1DAT	=	0x0086
                           000086   306 _TOFFH	=	0x0086
                           000087   307 _PCON	=	0x0087
                           000088   308 _TCON	=	0x0088
                           000089   309 _TMOD	=	0x0089
                           00008A   310 _TL0	=	0x008a
                           00008B   311 _TL1	=	0x008b
                           00008C   312 _TH0	=	0x008c
                           00008D   313 _TH1	=	0x008d
                           00008E   314 _CKCON	=	0x008e
                           00008F   315 _PSCTL	=	0x008f
                           000090   316 _P1	=	0x0090
                           000091   317 _TMR3CN	=	0x0091
                           000091   318 _CRC0DAT	=	0x0091
                           000092   319 _TMR3RLL	=	0x0092
                           000092   320 _CRC0CN	=	0x0092
                           000093   321 _TMR3RLH	=	0x0093
                           000093   322 _CRC0IN	=	0x0093
                           000094   323 _TMR3L	=	0x0094
                           000095   324 _CRC0FLIP	=	0x0095
                           000095   325 _TMR3H	=	0x0095
                           000096   326 _DC0CF	=	0x0096
                           000096   327 _CRC0AUTO	=	0x0096
                           000097   328 _DC0CN	=	0x0097
                           000097   329 _CRC0CNT	=	0x0097
                           000098   330 _SCON0	=	0x0098
                           000099   331 _SBUF0	=	0x0099
                           00009A   332 _CPT1CN	=	0x009a
                           00009B   333 _CPT0CN	=	0x009b
                           00009C   334 _CPT1MD	=	0x009c
                           00009D   335 _CPT0MD	=	0x009d
                           00009E   336 _CPT1MX	=	0x009e
                           00009F   337 _CPT0MX	=	0x009f
                           0000A0   338 _P2	=	0x00a0
                           0000A1   339 _SPI0CFG	=	0x00a1
                           0000A2   340 _SPI0CKR	=	0x00a2
                           0000A3   341 _SPI0DAT	=	0x00a3
                           0000A4   342 _P0MDOUT	=	0x00a4
                           0000A4   343 _P0DRV	=	0x00a4
                           0000A5   344 _P1MDOUT	=	0x00a5
                           0000A5   345 _P1DRV	=	0x00a5
                           0000A6   346 _P2MDOUT	=	0x00a6
                           0000A6   347 _P2DRV	=	0x00a6
                           0000A7   348 _SFRPAGE	=	0x00a7
                           0000A8   349 _IE	=	0x00a8
                           0000A9   350 _CLKSEL	=	0x00a9
                           0000AA   351 _EMI0CN	=	0x00aa
                           0000AB   352 _EMI0CF	=	0x00ab
                           0000AC   353 _RTC0ADR	=	0x00ac
                           0000AD   354 _RTC0DAT	=	0x00ad
                           0000AE   355 _RTC0KEY	=	0x00ae
                           0000AF   356 _EMI0TC	=	0x00af
                           0000AF   357 _ONESHOT	=	0x00af
                           0000B0   358 _SPI1CN	=	0x00b0
                           0000B1   359 _OSCXCN	=	0x00b1
                           0000B2   360 _OSCICN	=	0x00b2
                           0000B3   361 _OSCICL	=	0x00b3
                           0000B5   362 _PMU0CF	=	0x00b5
                           0000B6   363 _FLSCL	=	0x00b6
                           0000B7   364 _FLKEY	=	0x00b7
                           0000B8   365 _IP	=	0x00b8
                           0000B9   366 _IREF0CN	=	0x00b9
                           0000BA   367 _ADC0AC	=	0x00ba
                           0000BA   368 _ADC0PWR	=	0x00ba
                           0000BB   369 _ADC0MX	=	0x00bb
                           0000BC   370 _ADC0CF	=	0x00bc
                           0000BD   371 _ADC0TK	=	0x00bd
                           0000BD   372 _ADC0L	=	0x00bd
                           0000BE   373 _ADC0H	=	0x00be
                           0000BF   374 _P1MASK	=	0x00bf
                           0000C0   375 _SMB0CN	=	0x00c0
                           0000C1   376 _SMB0CF	=	0x00c1
                           0000C2   377 _SMB0DAT	=	0x00c2
                           0000C3   378 _ADC0GTL	=	0x00c3
                           0000C4   379 _ADC0GTH	=	0x00c4
                           0000C5   380 _ADC0LTL	=	0x00c5
                           0000C6   381 _ADC0LTH	=	0x00c6
                           0000C7   382 _P0MASK	=	0x00c7
                           0000C8   383 _TMR2CN	=	0x00c8
                           0000C9   384 _REG0CN	=	0x00c9
                           0000CA   385 _TMR2RLL	=	0x00ca
                           0000CB   386 _TMR2RLH	=	0x00cb
                           0000CC   387 _TMR2L	=	0x00cc
                           0000CD   388 _TMR2H	=	0x00cd
                           0000CE   389 _PCA0CPM5	=	0x00ce
                           0000CF   390 _P1MAT	=	0x00cf
                           0000D0   391 _PSW	=	0x00d0
                           0000D1   392 _REF0CN	=	0x00d1
                           0000D2   393 _PCA0CPL5	=	0x00d2
                           0000D3   394 _PCA0CPH5	=	0x00d3
                           0000D4   395 _P0SKIP	=	0x00d4
                           0000D5   396 _P1SKIP	=	0x00d5
                           0000D6   397 _P2SKIP	=	0x00d6
                           0000D7   398 _P0MAT	=	0x00d7
                           0000D8   399 _PCA0CN	=	0x00d8
                           0000D9   400 _PCA0MD	=	0x00d9
                           0000DA   401 _PCA0CPM0	=	0x00da
                           0000DB   402 _PCA0CPM1	=	0x00db
                           0000DC   403 _PCA0CPM2	=	0x00dc
                           0000DD   404 _PCA0CPM3	=	0x00dd
                           0000DE   405 _PCA0CPM4	=	0x00de
                           0000DF   406 _PCA0PWM	=	0x00df
                           0000E0   407 _ACC	=	0x00e0
                           0000E1   408 _XBR0	=	0x00e1
                           0000E2   409 _XBR1	=	0x00e2
                           0000E3   410 _XBR2	=	0x00e3
                           0000E4   411 _IT01CF	=	0x00e4
                           0000E5   412 _FLWR	=	0x00e5
                           0000E6   413 _EIE1	=	0x00e6
                           0000E7   414 _EIE2	=	0x00e7
                           0000E8   415 _ADC0CN	=	0x00e8
                           0000E9   416 _PCA0CPL1	=	0x00e9
                           0000EA   417 _PCA0CPH1	=	0x00ea
                           0000EB   418 _PCA0CPL2	=	0x00eb
                           0000EC   419 _PCA0CPH2	=	0x00ec
                           0000ED   420 _PCA0CPL3	=	0x00ed
                           0000EE   421 _PCA0CPH3	=	0x00ee
                           0000EF   422 _RSTSRC	=	0x00ef
                           0000F0   423 _B	=	0x00f0
                           0000F1   424 _P0MDIN	=	0x00f1
                           0000F2   425 _P1MDIN	=	0x00f2
                           0000F3   426 _P2MDIN	=	0x00f3
                           0000F4   427 _SMB0ADR	=	0x00f4
                           0000F5   428 _SMB0ADM	=	0x00f5
                           0000F6   429 _EIP1	=	0x00f6
                           0000F7   430 _EIP2	=	0x00f7
                           0000F8   431 _SPI0CN	=	0x00f8
                           0000F9   432 _PCA0L	=	0x00f9
                           0000FA   433 _PCA0H	=	0x00fa
                           0000FB   434 _PCA0CPL0	=	0x00fb
                           0000FC   435 _PCA0CPH0	=	0x00fc
                           0000FD   436 _PCA0CPL4	=	0x00fd
                           0000FE   437 _PCA0CPH4	=	0x00fe
                           0000FF   438 _VDM0CN	=	0x00ff
                           008382   439 _DP	=	0x8382
                           008685   440 _TOFF	=	0x8685
                           009392   441 _TMR3RL	=	0x9392
                           009594   442 _TMR3	=	0x9594
                           00BEBD   443 _ADC0	=	0xbebd
                           00C4C3   444 _ADC0GT	=	0xc4c3
                           00C6C5   445 _ADC0LT	=	0xc6c5
                           00CBCA   446 _TMR2RL	=	0xcbca
                           00CDCC   447 _TMR2	=	0xcdcc
                           00D3D2   448 _PCA0CP5	=	0xd3d2
                           00EAE9   449 _PCA0CP1	=	0xeae9
                           00ECEB   450 _PCA0CP2	=	0xeceb
                           00EEED   451 _PCA0CP3	=	0xeeed
                           00FAF9   452 _PCA0	=	0xfaf9
                           00FCFB   453 _PCA0CP0	=	0xfcfb
                           00FEFD   454 _PCA0CP4	=	0xfefd
                                    455 ;--------------------------------------------------------
                                    456 ; special function bits
                                    457 ;--------------------------------------------------------
                                    458 	.area RSEG    (ABS,DATA)
      000000                        459 	.org 0x0000
                           00008F   460 _TF1	=	0x008f
                           00008E   461 _TR1	=	0x008e
                           00008D   462 _TF0	=	0x008d
                           00008C   463 _TR0	=	0x008c
                           00008B   464 _IE1	=	0x008b
                           00008A   465 _IT1	=	0x008a
                           000089   466 _IE0	=	0x0089
                           000088   467 _IT0	=	0x0088
                           000096   468 _CRC0SEL	=	0x0096
                           000095   469 _CRC0INIT	=	0x0095
                           000094   470 _CRC0VAL	=	0x0094
                           00009F   471 _S0MODE	=	0x009f
                           00009D   472 _MCE0	=	0x009d
                           00009C   473 _REN0	=	0x009c
                           00009B   474 _TB80	=	0x009b
                           00009A   475 _RB80	=	0x009a
                           000099   476 _TI0	=	0x0099
                           000098   477 _RI0	=	0x0098
                           0000AF   478 _EA	=	0x00af
                           0000AE   479 _ESPI0	=	0x00ae
                           0000AD   480 _ET2	=	0x00ad
                           0000AC   481 _ES0	=	0x00ac
                           0000AB   482 _ET1	=	0x00ab
                           0000AA   483 _EX1	=	0x00aa
                           0000A9   484 _ET0	=	0x00a9
                           0000A8   485 _EX0	=	0x00a8
                           0000B7   486 _SPIF1	=	0x00b7
                           0000B6   487 _WCOL1	=	0x00b6
                           0000B5   488 _MODF1	=	0x00b5
                           0000B4   489 _RXOVRN1	=	0x00b4
                           0000B3   490 _NSS1MD1	=	0x00b3
                           0000B2   491 _NSS1MD0	=	0x00b2
                           0000B1   492 _TXBMT1	=	0x00b1
                           0000B0   493 _SPI1EN	=	0x00b0
                           0000BE   494 _PSPI0	=	0x00be
                           0000BD   495 _PT2	=	0x00bd
                           0000BC   496 _PS0	=	0x00bc
                           0000BB   497 _PT1	=	0x00bb
                           0000BA   498 _PX1	=	0x00ba
                           0000B9   499 _PT0	=	0x00b9
                           0000B8   500 _PX0	=	0x00b8
                           0000C7   501 _MASTER	=	0x00c7
                           0000C6   502 _TXMODE	=	0x00c6
                           0000C5   503 _STA	=	0x00c5
                           0000C4   504 _STO	=	0x00c4
                           0000C3   505 _ACKRQ	=	0x00c3
                           0000C2   506 _ARBLOST	=	0x00c2
                           0000C1   507 _ACK	=	0x00c1
                           0000C0   508 _SI	=	0x00c0
                           0000CF   509 _TF2H	=	0x00cf
                           0000CE   510 _TF2L	=	0x00ce
                           0000CD   511 _TF2LEN	=	0x00cd
                           0000CC   512 _TF2CEN	=	0x00cc
                           0000CB   513 _T2SPLIT	=	0x00cb
                           0000CA   514 _TR2	=	0x00ca
                           0000C9   515 _T2RCLK	=	0x00c9
                           0000C8   516 _T2XCLK	=	0x00c8
                           0000D7   517 _CY	=	0x00d7
                           0000D6   518 _AC	=	0x00d6
                           0000D5   519 _F0	=	0x00d5
                           0000D4   520 _RS1	=	0x00d4
                           0000D3   521 _RS0	=	0x00d3
                           0000D2   522 _OV	=	0x00d2
                           0000D1   523 _F1	=	0x00d1
                           0000D0   524 _P	=	0x00d0
                           0000DF   525 _CF	=	0x00df
                           0000DE   526 _CR	=	0x00de
                           0000DD   527 _CCF5	=	0x00dd
                           0000DC   528 _CCF4	=	0x00dc
                           0000DB   529 _CCF3	=	0x00db
                           0000DA   530 _CCF2	=	0x00da
                           0000D9   531 _CCF1	=	0x00d9
                           0000D8   532 _CCF0	=	0x00d8
                           0000EF   533 _AD0EN	=	0x00ef
                           0000EE   534 _BURSTEN	=	0x00ee
                           0000ED   535 _AD0INT	=	0x00ed
                           0000EC   536 _AD0BUSY	=	0x00ec
                           0000EB   537 _AD0WINT	=	0x00eb
                           0000EA   538 _AD0CM2	=	0x00ea
                           0000E9   539 _AD0CM1	=	0x00e9
                           0000E8   540 _AD0CM0	=	0x00e8
                           0000FF   541 _SPIF0	=	0x00ff
                           0000FE   542 _WCOL0	=	0x00fe
                           0000FD   543 _MODF0	=	0x00fd
                           0000FC   544 _RXOVRN0	=	0x00fc
                           0000FB   545 _NSS0MD1	=	0x00fb
                           0000FA   546 _NSS0MD0	=	0x00fa
                           0000F9   547 _TXBMT0	=	0x00f9
                           0000F8   548 _SPI0EN	=	0x00f8
                           000096   549 _LED_RED	=	0x0096
                           000095   550 _LED_GREEN	=	0x0095
                           000082   551 _PIN_CONFIG	=	0x0082
                           000083   552 _PIN_ENABLE	=	0x0083
                           000087   553 _IRQ	=	0x0087
                           000094   554 _NSS1	=	0x0094
                           0000A6   555 _SDN	=	0x00a6
                                    556 ;--------------------------------------------------------
                                    557 ; overlayable register banks
                                    558 ;--------------------------------------------------------
                                    559 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        560 	.ds 8
                                    561 ;--------------------------------------------------------
                                    562 ; internal ram data
                                    563 ;--------------------------------------------------------
                                    564 	.area DSEG    (DATA)
      000000                        565 _extract_hipri_c_2_150:
      000000                        566 	.ds 1
      000001                        567 _extract_hipri_sloc0_1_0:
      000001                        568 	.ds 2
      000003                        569 _mavlink_frame_slen_1_156:
      000003                        570 	.ds 2
      000005                        571 _mavlink_frame_offset_1_156:
      000005                        572 	.ds 2
      000007                        573 _mavlink_frame_high_offset_1_156:
      000007                        574 	.ds 2
      000009                        575 _mavlink_frame_c_2_157:
      000009                        576 	.ds 1
      00000A                        577 _mavlink_frame_sloc0_1_0:
      00000A                        578 	.ds 2
      00000C                        579 _mavlink_frame_sloc1_1_0:
      00000C                        580 	.ds 1
      00000D                        581 _packet_get_next_max_xmit_1_163:
      00000D                        582 	.ds 1
      00000E                        583 _packet_get_next_slen_1_164:
      00000E                        584 	.ds 2
      000010                        585 _packet_get_next_sloc0_1_0:
      000010                        586 	.ds 2
                                    587 ;--------------------------------------------------------
                                    588 ; overlayable items in internal ram 
                                    589 ;--------------------------------------------------------
                                    590 ;--------------------------------------------------------
                                    591 ; indirectly addressable internal ram data
                                    592 ;--------------------------------------------------------
                                    593 	.area ISEG    (DATA)
                                    594 ;--------------------------------------------------------
                                    595 ; absolute internal ram data
                                    596 ;--------------------------------------------------------
                                    597 	.area IABS    (ABS,DATA)
                                    598 	.area IABS    (ABS,DATA)
                                    599 ;--------------------------------------------------------
                                    600 ; bit data
                                    601 ;--------------------------------------------------------
                                    602 	.area BSEG    (BIT)
      000000                        603 _last_sent_is_resend:
      000000                        604 	.ds 1
      000001                        605 _last_sent_is_injected:
      000001                        606 	.ds 1
      000002                        607 _last_recv_is_resend:
      000002                        608 	.ds 1
      000003                        609 _force_resend:
      000003                        610 	.ds 1
      000004                        611 _injected_packet:
      000004                        612 	.ds 1
      000005                        613 _seen_mavlink::
      000005                        614 	.ds 1
      000006                        615 _packet_is_duplicate_PARM_3:
      000006                        616 	.ds 1
                                    617 ;--------------------------------------------------------
                                    618 ; paged external ram data
                                    619 ;--------------------------------------------------------
                                    620 	.area PSEG    (PAG,XDATA)
      000000                        621 _last_sent_len:
      000000                        622 	.ds 1
      000001                        623 _last_recv_len:
      000001                        624 	.ds 1
      000002                        625 _serial_rate:
      000002                        626 	.ds 2
      000004                        627 _mav_pkt_len:
      000004                        628 	.ds 1
      000005                        629 _mav_pkt_start_time:
      000005                        630 	.ds 2
      000007                        631 _mav_pkt_max_time:
      000007                        632 	.ds 2
      000009                        633 _mav_max_xmit:
      000009                        634 	.ds 1
      00000A                        635 _extract_hipri_max_xmit_1_148:
      00000A                        636 	.ds 1
      00000B                        637 _extract_hipri_slen_1_149:
      00000B                        638 	.ds 2
      00000D                        639 _extract_hipri_high_offset_1_149:
      00000D                        640 	.ds 2
      00000F                        641 _mavlink_frame_PARM_2:
      00000F                        642 	.ds 2
      000011                        643 _packet_get_next_PARM_2:
      000011                        644 	.ds 2
      000013                        645 _packet_is_duplicate_PARM_2:
      000013                        646 	.ds 2
      000015                        647 _packet_inject_PARM_2:
      000015                        648 	.ds 1
                                    649 ;--------------------------------------------------------
                                    650 ; external ram data
                                    651 ;--------------------------------------------------------
                                    652 	.area XSEG    (XDATA)
      000000                        653 _last_received:
      000000                        654 	.ds 252
      0000FC                        655 _last_sent:
      0000FC                        656 	.ds 252
      0001F8                        657 _mavlink_frame_max_xmit_1_155:
      0001F8                        658 	.ds 1
      0001F9                        659 _packet_set_max_xmit_max_1_195:
      0001F9                        660 	.ds 1
      0001FA                        661 _packet_set_serial_speed_speed_1_197:
      0001FA                        662 	.ds 2
      0001FC                        663 _packet_is_duplicate_len_1_199:
      0001FC                        664 	.ds 1
                                    665 ;--------------------------------------------------------
                                    666 ; absolute external ram data
                                    667 ;--------------------------------------------------------
                                    668 	.area XABS    (ABS,XDATA)
                                    669 ;--------------------------------------------------------
                                    670 ; external initialized ram data
                                    671 ;--------------------------------------------------------
                                    672 	.area XISEG   (XDATA)
                                    673 	.area HOME    (CODE)
                                    674 	.area GSINIT0 (CODE)
                                    675 	.area GSINIT1 (CODE)
                                    676 	.area GSINIT2 (CODE)
                                    677 	.area GSINIT3 (CODE)
                                    678 	.area GSINIT4 (CODE)
                                    679 	.area GSINIT5 (CODE)
                                    680 	.area GSINIT  (CODE)
                                    681 	.area GSFINAL (CODE)
                                    682 	.area CSEG    (CODE)
                                    683 ;--------------------------------------------------------
                                    684 ; global & static initialisations
                                    685 ;--------------------------------------------------------
                                    686 	.area HOME    (CODE)
                                    687 	.area GSINIT  (CODE)
                                    688 	.area GSFINAL (CODE)
                                    689 	.area GSINIT  (CODE)
                                    690 ;--------------------------------------------------------
                                    691 ; Home
                                    692 ;--------------------------------------------------------
                                    693 	.area HOME    (CODE)
                                    694 	.area HOME    (CODE)
                                    695 ;--------------------------------------------------------
                                    696 ; code
                                    697 ;--------------------------------------------------------
                                    698 	.area CSEG    (CODE)
                                    699 ;------------------------------------------------------------
                                    700 ;Allocation info for local variables in function 'check_heartbeat'
                                    701 ;------------------------------------------------------------
                                    702 ;	radio/packet.c:77: static void check_heartbeat(__xdata uint8_t * __pdata buf) __nonbanked
                                    703 ;	-----------------------------------------
                                    704 ;	 function check_heartbeat
                                    705 ;	-----------------------------------------
      000000                        706 _check_heartbeat:
                           000007   707 	ar7 = 0x07
                           000006   708 	ar6 = 0x06
                           000005   709 	ar5 = 0x05
                           000004   710 	ar4 = 0x04
                           000003   711 	ar3 = 0x03
                           000002   712 	ar2 = 0x02
                           000001   713 	ar1 = 0x01
                           000000   714 	ar0 = 0x00
                                    715 ;	radio/packet.c:79: if (buf[0] == MAVLINK10_STX &&
      000000 AE 82            [24]  716 	mov	r6,dpl
      000002 AF 83            [24]  717 	mov  r7,dph
      000004 E0               [24]  718 	movx	a,@dptr
      000005 FD               [12]  719 	mov	r5,a
      000006 BD FE 1A         [24]  720 	cjne	r5,#0xFE,00105$
                                    721 ;	radio/packet.c:80: buf[1] == 9 && buf[5] == 0) {
      000009 8E 82            [24]  722 	mov	dpl,r6
      00000B 8F 83            [24]  723 	mov	dph,r7
      00000D A3               [24]  724 	inc	dptr
      00000E E0               [24]  725 	movx	a,@dptr
      00000F FD               [12]  726 	mov	r5,a
      000010 BD 09 10         [24]  727 	cjne	r5,#0x09,00105$
      000013 74 05            [12]  728 	mov	a,#0x05
      000015 2E               [12]  729 	add	a,r6
      000016 FE               [12]  730 	mov	r6,a
      000017 E4               [12]  731 	clr	a
      000018 3F               [12]  732 	addc	a,r7
      000019 FF               [12]  733 	mov	r7,a
      00001A 8E 82            [24]  734 	mov	dpl,r6
      00001C 8F 83            [24]  735 	mov	dph,r7
      00001E E0               [24]  736 	movx	a,@dptr
      00001F 70 02            [24]  737 	jnz	00105$
                                    738 ;	radio/packet.c:82: seen_mavlink = true;
      000021 D2*05            [12]  739 	setb	_seen_mavlink
      000023                        740 00105$:
      000023 22               [24]  741 	ret
                                    742 ;------------------------------------------------------------
                                    743 ;Allocation info for local variables in function 'extract_hipri'
                                    744 ;------------------------------------------------------------
                                    745 ;c                         Allocated with name '_extract_hipri_c_2_150'
                                    746 ;sloc0                     Allocated with name '_extract_hipri_sloc0_1_0'
                                    747 ;------------------------------------------------------------
                                    748 ;	radio/packet.c:92: int16_t extract_hipri(__pdata uint8_t max_xmit)
                                    749 ;	-----------------------------------------
                                    750 ;	 function extract_hipri
                                    751 ;	-----------------------------------------
      000024                        752 _extract_hipri:
      000024 E5 82            [12]  753 	mov	a,dpl
      000026 78r0A            [12]  754 	mov	r0,#_extract_hipri_max_xmit_1_148
      000028 F2               [24]  755 	movx	@r0,a
                                    756 ;	radio/packet.c:94: __pdata uint16_t slen = serial_read_available();
      000029 12r00r00         [24]  757 	lcall	_serial_read_available
      00002C 78r0B            [12]  758 	mov	r0,#_extract_hipri_slen_1_149
      00002E E5 82            [12]  759 	mov	a,dpl
      000030 F2               [24]  760 	movx	@r0,a
      000031 08               [12]  761 	inc	r0
      000032 E5 83            [12]  762 	mov	a,dph
      000034 F2               [24]  763 	movx	@r0,a
                                    764 ;	radio/packet.c:95: __pdata uint16_t offset = 0;
      000035 7B 00            [12]  765 	mov	r3,#0x00
      000037 7C 00            [12]  766 	mov	r4,#0x00
                                    767 ;	radio/packet.c:96: __pdata int16_t high_offset = -1;
      000039 78r0D            [12]  768 	mov	r0,#_extract_hipri_high_offset_1_149
      00003B 74 FF            [12]  769 	mov	a,#0xFF
      00003D F2               [24]  770 	movx	@r0,a
      00003E 08               [12]  771 	inc	r0
      00003F F2               [24]  772 	movx	@r0,a
                                    773 ;	radio/packet.c:99: while (slen >= 8) {
      000040                        774 00111$:
      000040 78r0B            [12]  775 	mov	r0,#_extract_hipri_slen_1_149
      000042 C3               [12]  776 	clr	c
      000043 E2               [24]  777 	movx	a,@r0
      000044 94 08            [12]  778 	subb	a,#0x08
      000046 08               [12]  779 	inc	r0
      000047 E2               [24]  780 	movx	a,@r0
      000048 94 00            [12]  781 	subb	a,#0x00
      00004A 50 03            [24]  782 	jnc	00140$
      00004C 02r01r1A         [24]  783 	ljmp	00113$
      00004F                        784 00140$:
                                    785 ;	radio/packet.c:100: register uint8_t c = serial_peekx(offset);
      00004F 8B 82            [24]  786 	mov	dpl,r3
      000051 8C 83            [24]  787 	mov	dph,r4
      000053 C0 04            [24]  788 	push	ar4
      000055 C0 03            [24]  789 	push	ar3
      000057 12r00r00         [24]  790 	lcall	_serial_peekx
      00005A 85 82*00         [24]  791 	mov	_extract_hipri_c_2_150,dpl
      00005D D0 03            [24]  792 	pop	ar3
      00005F D0 04            [24]  793 	pop	ar4
                                    794 ;	radio/packet.c:101: if (c != MAVLINK10_STX) {
      000061 74 FE            [12]  795 	mov	a,#0xFE
      000063 B5*00 02         [24]  796 	cjne	a,_extract_hipri_c_2_150,00141$
      000066 80 03            [24]  797 	sjmp	00142$
      000068                        798 00141$:
      000068 02r01r1A         [24]  799 	ljmp	00113$
      00006B                        800 00142$:
                                    801 ;	radio/packet.c:105: c = serial_peekx(offset + 1);
      00006B 74 01            [12]  802 	mov	a,#0x01
      00006D 2B               [12]  803 	add	a,r3
      00006E FE               [12]  804 	mov	r6,a
      00006F E4               [12]  805 	clr	a
      000070 3C               [12]  806 	addc	a,r4
      000071 FF               [12]  807 	mov	r7,a
      000072 8E 82            [24]  808 	mov	dpl,r6
      000074 8F 83            [24]  809 	mov	dph,r7
      000076 C0 04            [24]  810 	push	ar4
      000078 C0 03            [24]  811 	push	ar3
      00007A 12r00r00         [24]  812 	lcall	_serial_peekx
      00007D 85 82*00         [24]  813 	mov	_extract_hipri_c_2_150,dpl
      000080 D0 03            [24]  814 	pop	ar3
      000082 D0 04            [24]  815 	pop	ar4
                                    816 ;	radio/packet.c:106: if (c >= 255 - 8 || 
      000084 74 09            [12]  817 	mov	a,#0x100 - 0xF7
      000086 25*00            [12]  818 	add	a,_extract_hipri_c_2_150
      000088 50 03            [24]  819 	jnc	00143$
      00008A 02r01r1A         [24]  820 	ljmp	00113$
      00008D                        821 00143$:
                                    822 ;	radio/packet.c:107: c+8 > max_xmit - last_sent_len) {
      00008D C0 03            [24]  823 	push	ar3
      00008F C0 04            [24]  824 	push	ar4
      000091 AD*00            [24]  825 	mov	r5,_extract_hipri_c_2_150
      000093 7E 00            [12]  826 	mov	r6,#0x00
      000095 74 08            [12]  827 	mov	a,#0x08
      000097 2D               [12]  828 	add	a,r5
      000098 FA               [12]  829 	mov	r2,a
      000099 E4               [12]  830 	clr	a
      00009A 3E               [12]  831 	addc	a,r6
      00009B FC               [12]  832 	mov	r4,a
      00009C 78r0A            [12]  833 	mov	r0,#_extract_hipri_max_xmit_1_148
      00009E E2               [24]  834 	movx	a,@r0
      00009F F5*01            [12]  835 	mov	_extract_hipri_sloc0_1_0,a
                                    836 ;	1-genFromRTrack replaced	mov	(_extract_hipri_sloc0_1_0 + 1),#0x00
      0000A1 8E*02            [24]  837 	mov	(_extract_hipri_sloc0_1_0 + 1),r6
      0000A3 78r00            [12]  838 	mov	r0,#_last_sent_len
      0000A5 E2               [24]  839 	movx	a,@r0
      0000A6 FB               [12]  840 	mov	r3,a
      0000A7 7F 00            [12]  841 	mov	r7,#0x00
      0000A9 E5*01            [12]  842 	mov	a,_extract_hipri_sloc0_1_0
      0000AB C3               [12]  843 	clr	c
      0000AC 9B               [12]  844 	subb	a,r3
      0000AD FB               [12]  845 	mov	r3,a
      0000AE E5*02            [12]  846 	mov	a,(_extract_hipri_sloc0_1_0 + 1)
      0000B0 9F               [12]  847 	subb	a,r7
      0000B1 FF               [12]  848 	mov	r7,a
      0000B2 C3               [12]  849 	clr	c
      0000B3 EB               [12]  850 	mov	a,r3
      0000B4 9A               [12]  851 	subb	a,r2
      0000B5 EF               [12]  852 	mov	a,r7
      0000B6 64 80            [12]  853 	xrl	a,#0x80
      0000B8 8C F0            [24]  854 	mov	b,r4
      0000BA 63 F0 80         [24]  855 	xrl	b,#0x80
      0000BD 95 F0            [12]  856 	subb	a,b
      0000BF D0 04            [24]  857 	pop	ar4
      0000C1 D0 03            [24]  858 	pop	ar3
      0000C3 40 55            [24]  859 	jc	00113$
                                    860 ;	radio/packet.c:111: if (c+8 > slen) {
      0000C5 74 08            [12]  861 	mov	a,#0x08
      0000C7 2D               [12]  862 	add	a,r5
      0000C8 FD               [12]  863 	mov	r5,a
      0000C9 E4               [12]  864 	clr	a
      0000CA 3E               [12]  865 	addc	a,r6
      0000CB FE               [12]  866 	mov	r6,a
      0000CC 78r0B            [12]  867 	mov	r0,#_extract_hipri_slen_1_149
      0000CE C3               [12]  868 	clr	c
      0000CF E2               [24]  869 	movx	a,@r0
      0000D0 9D               [12]  870 	subb	a,r5
      0000D1 08               [12]  871 	inc	r0
      0000D2 E2               [24]  872 	movx	a,@r0
      0000D3 9E               [12]  873 	subb	a,r6
      0000D4 40 44            [24]  874 	jc	00113$
                                    875 ;	radio/packet.c:117: if(serial_peekx(offset +6) == MSG_TYP_RC_OVERRIDE && c == MSG_LEN_RC_OVERRIDE) {
      0000D6 74 06            [12]  876 	mov	a,#0x06
      0000D8 2B               [12]  877 	add	a,r3
      0000D9 FE               [12]  878 	mov	r6,a
      0000DA E4               [12]  879 	clr	a
      0000DB 3C               [12]  880 	addc	a,r4
      0000DC FF               [12]  881 	mov	r7,a
      0000DD 8E 82            [24]  882 	mov	dpl,r6
      0000DF 8F 83            [24]  883 	mov	dph,r7
      0000E1 C0 04            [24]  884 	push	ar4
      0000E3 C0 03            [24]  885 	push	ar3
      0000E5 12r00r00         [24]  886 	lcall	_serial_peekx
      0000E8 AF 82            [24]  887 	mov	r7,dpl
      0000EA D0 03            [24]  888 	pop	ar3
      0000EC D0 04            [24]  889 	pop	ar4
      0000EE BF 46 0C         [24]  890 	cjne	r7,#0x46,00109$
      0000F1 74 12            [12]  891 	mov	a,#0x12
      0000F3 B5*00 07         [24]  892 	cjne	a,_extract_hipri_c_2_150,00109$
                                    893 ;	radio/packet.c:119: high_offset = offset;
      0000F6 78r0D            [12]  894 	mov	r0,#_extract_hipri_high_offset_1_149
      0000F8 EB               [12]  895 	mov	a,r3
      0000F9 F2               [24]  896 	movx	@r0,a
      0000FA 08               [12]  897 	inc	r0
      0000FB EC               [12]  898 	mov	a,r4
      0000FC F2               [24]  899 	movx	@r0,a
      0000FD                        900 00109$:
                                    901 ;	radio/packet.c:122: c += 8;
      0000FD 74 08            [12]  902 	mov	a,#0x08
      0000FF 25*00            [12]  903 	add	a,_extract_hipri_c_2_150
      000101 F5*00            [12]  904 	mov	_extract_hipri_c_2_150,a
                                    905 ;	radio/packet.c:123: slen -= c;
      000103 AA*00            [24]  906 	mov	r2,_extract_hipri_c_2_150
      000105 7F 00            [12]  907 	mov	r7,#0x00
      000107 78r0B            [12]  908 	mov	r0,#_extract_hipri_slen_1_149
      000109 E2               [24]  909 	movx	a,@r0
      00010A C3               [12]  910 	clr	c
      00010B 9A               [12]  911 	subb	a,r2
      00010C F2               [24]  912 	movx	@r0,a
      00010D 08               [12]  913 	inc	r0
      00010E E2               [24]  914 	movx	a,@r0
      00010F 9F               [12]  915 	subb	a,r7
      000110 F2               [24]  916 	movx	@r0,a
                                    917 ;	radio/packet.c:124: offset += c;
      000111 EA               [12]  918 	mov	a,r2
      000112 2B               [12]  919 	add	a,r3
      000113 FB               [12]  920 	mov	r3,a
      000114 EF               [12]  921 	mov	a,r7
      000115 3C               [12]  922 	addc	a,r4
      000116 FC               [12]  923 	mov	r4,a
      000117 02r00r40         [24]  924 	ljmp	00111$
      00011A                        925 00113$:
                                    926 ;	radio/packet.c:127: return high_offset;
      00011A 78r0D            [12]  927 	mov	r0,#_extract_hipri_high_offset_1_149
      00011C E2               [24]  928 	movx	a,@r0
      00011D F5 82            [12]  929 	mov	dpl,a
      00011F 08               [12]  930 	inc	r0
      000120 E2               [24]  931 	movx	a,@r0
      000121 F5 83            [12]  932 	mov	dph,a
      000123 22               [24]  933 	ret
                                    934 ;------------------------------------------------------------
                                    935 ;Allocation info for local variables in function 'mavlink_frame'
                                    936 ;------------------------------------------------------------
                                    937 ;slen                      Allocated with name '_mavlink_frame_slen_1_156'
                                    938 ;offset                    Allocated with name '_mavlink_frame_offset_1_156'
                                    939 ;high_offset               Allocated with name '_mavlink_frame_high_offset_1_156'
                                    940 ;c                         Allocated with name '_mavlink_frame_c_2_157'
                                    941 ;sloc0                     Allocated with name '_mavlink_frame_sloc0_1_0'
                                    942 ;sloc1                     Allocated with name '_mavlink_frame_sloc1_1_0'
                                    943 ;max_xmit                  Allocated with name '_mavlink_frame_max_xmit_1_155'
                                    944 ;------------------------------------------------------------
                                    945 ;	radio/packet.c:137: uint8_t mavlink_frame(uint8_t max_xmit, __xdata uint8_t * __pdata buf) __nonbanked
                                    946 ;	-----------------------------------------
                                    947 ;	 function mavlink_frame
                                    948 ;	-----------------------------------------
      000124                        949 _mavlink_frame:
      000124 E5 82            [12]  950 	mov	a,dpl
      000126 90r01rF8         [24]  951 	mov	dptr,#_mavlink_frame_max_xmit_1_155
      000129 F0               [24]  952 	movx	@dptr,a
                                    953 ;	radio/packet.c:139: __data uint16_t slen, offset = 0, high_offset;
      00012A E4               [12]  954 	clr	a
      00012B F5*05            [12]  955 	mov	_mavlink_frame_offset_1_156,a
      00012D F5*06            [12]  956 	mov	(_mavlink_frame_offset_1_156 + 1),a
                                    957 ;	radio/packet.c:141: serial_read_buf(last_sent, mav_pkt_len);
      00012F 78r04            [12]  958 	mov	r0,#_mav_pkt_len
      000131 79r00            [12]  959 	mov	r1,#_serial_read_buf_PARM_2
      000133 E2               [24]  960 	movx	a,@r0
      000134 F3               [24]  961 	movx	@r1,a
      000135 90r00rFC         [24]  962 	mov	dptr,#_last_sent
      000138 12r00r00         [24]  963 	lcall	_serial_read_buf
                                    964 ;	radio/packet.c:142: last_sent_len = mav_pkt_len;
      00013B 78r04            [12]  965 	mov	r0,#_mav_pkt_len
      00013D E2               [24]  966 	movx	a,@r0
      00013E FD               [12]  967 	mov	r5,a
      00013F 78r00            [12]  968 	mov	r0,#_last_sent_len
      000141 F2               [24]  969 	movx	@r0,a
                                    970 ;	radio/packet.c:143: memcpy(buf, last_sent, last_sent_len);
      000142 78r0F            [12]  971 	mov	r0,#_mavlink_frame_PARM_2
      000144 E2               [24]  972 	movx	a,@r0
      000145 FA               [12]  973 	mov	r2,a
      000146 08               [12]  974 	inc	r0
      000147 E2               [24]  975 	movx	a,@r0
      000148 FB               [12]  976 	mov	r3,a
      000149 7C 00            [12]  977 	mov	r4,#0x00
      00014B 90r00r00         [24]  978 	mov	dptr,#_memcpy_PARM_2
      00014E 74rFC            [12]  979 	mov	a,#_last_sent
      000150 F0               [24]  980 	movx	@dptr,a
      000151 74s00            [12]  981 	mov	a,#(_last_sent >> 8)
      000153 A3               [24]  982 	inc	dptr
      000154 F0               [24]  983 	movx	@dptr,a
      000155 E4               [12]  984 	clr	a
      000156 A3               [24]  985 	inc	dptr
      000157 F0               [24]  986 	movx	@dptr,a
      000158 90r00r00         [24]  987 	mov	dptr,#_memcpy_PARM_3
      00015B ED               [12]  988 	mov	a,r5
      00015C F0               [24]  989 	movx	@dptr,a
      00015D E4               [12]  990 	clr	a
      00015E A3               [24]  991 	inc	dptr
      00015F F0               [24]  992 	movx	@dptr,a
      000160 8A 82            [24]  993 	mov	dpl,r2
      000162 8B 83            [24]  994 	mov	dph,r3
      000164 8C F0            [24]  995 	mov	b,r4
      000166 12r00r00         [24]  996 	lcall	_memcpy
                                    997 ;	radio/packet.c:144: mav_pkt_len = 0;
      000169 78r04            [12]  998 	mov	r0,#_mav_pkt_len
      00016B E4               [12]  999 	clr	a
      00016C F2               [24] 1000 	movx	@r0,a
                                   1001 ;	radio/packet.c:146: check_heartbeat(buf);
      00016D 78r0F            [12] 1002 	mov	r0,#_mavlink_frame_PARM_2
      00016F E2               [24] 1003 	movx	a,@r0
      000170 F5 82            [12] 1004 	mov	dpl,a
      000172 08               [12] 1005 	inc	r0
      000173 E2               [24] 1006 	movx	a,@r0
      000174 F5 83            [12] 1007 	mov	dph,a
      000176 12r00r00         [24] 1008 	lcall	_check_heartbeat
                                   1009 ;	radio/packet.c:148: high_offset = (feature_mavlink_framing == MAVLINK_FRAMING_HIGHPRI) ? extract_hipri(max_xmit) : -1;
      000179 90r00r00         [24] 1010 	mov	dptr,#_feature_mavlink_framing
      00017C E0               [24] 1011 	movx	a,@dptr
      00017D FD               [12] 1012 	mov	r5,a
      00017E BD 02 0F         [24] 1013 	cjne	r5,#0x02,00119$
      000181 90r01rF8         [24] 1014 	mov	dptr,#_mavlink_frame_max_xmit_1_155
      000184 E0               [24] 1015 	movx	a,@dptr
      000185 F5 82            [12] 1016 	mov	dpl,a
      000187 12r00r24         [24] 1017 	lcall	_extract_hipri
      00018A AC 82            [24] 1018 	mov	r4,dpl
      00018C AD 83            [24] 1019 	mov	r5,dph
      00018E 80 04            [24] 1020 	sjmp	00120$
      000190                       1021 00119$:
      000190 7C FF            [12] 1022 	mov	r4,#0xFF
      000192 7D FF            [12] 1023 	mov	r5,#0xFF
      000194                       1024 00120$:
      000194 8C*07            [24] 1025 	mov	_mavlink_frame_high_offset_1_156,r4
      000196 8D*08            [24] 1026 	mov	(_mavlink_frame_high_offset_1_156 + 1),r5
                                   1027 ;	radio/packet.c:150: slen = serial_read_available();
      000198 12r00r00         [24] 1028 	lcall	_serial_read_available
      00019B 85 82*03         [24] 1029 	mov	_mavlink_frame_slen_1_156,dpl
      00019E 85 83*04         [24] 1030 	mov	(_mavlink_frame_slen_1_156 + 1),dph
                                   1031 ;	radio/packet.c:154: while (slen >= 8) {
      0001A1 90r01rF8         [24] 1032 	mov	dptr,#_mavlink_frame_max_xmit_1_155
      0001A4 E0               [24] 1033 	movx	a,@dptr
      0001A5 F5*0C            [12] 1034 	mov	_mavlink_frame_sloc1_1_0,a
      0001A7 74 FF            [12] 1035 	mov	a,#0xFF
      0001A9 B5*07 09         [24] 1036 	cjne	a,_mavlink_frame_high_offset_1_156,00156$
      0001AC 74 FF            [12] 1037 	mov	a,#0xFF
      0001AE B5*08 04         [24] 1038 	cjne	a,(_mavlink_frame_high_offset_1_156 + 1),00156$
      0001B1 74 01            [12] 1039 	mov	a,#0x01
      0001B3 80 01            [24] 1040 	sjmp	00157$
      0001B5                       1041 00156$:
      0001B5 E4               [12] 1042 	clr	a
      0001B6                       1043 00157$:
      0001B6 FC               [12] 1044 	mov	r4,a
      0001B7                       1045 00114$:
      0001B7 C3               [12] 1046 	clr	c
      0001B8 E5*03            [12] 1047 	mov	a,_mavlink_frame_slen_1_156
      0001BA 94 08            [12] 1048 	subb	a,#0x08
      0001BC E5*04            [12] 1049 	mov	a,(_mavlink_frame_slen_1_156 + 1)
      0001BE 94 00            [12] 1050 	subb	a,#0x00
      0001C0 50 03            [24] 1051 	jnc	00158$
      0001C2 02r02rF7         [24] 1052 	ljmp	00116$
      0001C5                       1053 00158$:
                                   1054 ;	radio/packet.c:155: register uint8_t c = serial_peek();
      0001C5 C0 04            [24] 1055 	push	ar4
      0001C7 12r00r00         [24] 1056 	lcall	_serial_peek
      0001CA 85 82*09         [24] 1057 	mov	_mavlink_frame_c_2_157,dpl
      0001CD D0 04            [24] 1058 	pop	ar4
                                   1059 ;	radio/packet.c:156: if (c != MAVLINK10_STX) {
      0001CF 74 FE            [12] 1060 	mov	a,#0xFE
      0001D1 B5*09 02         [24] 1061 	cjne	a,_mavlink_frame_c_2_157,00159$
      0001D4 80 06            [24] 1062 	sjmp	00102$
      0001D6                       1063 00159$:
                                   1064 ;	radio/packet.c:158: return last_sent_len;			
      0001D6 78r00            [12] 1065 	mov	r0,#_last_sent_len
      0001D8 E2               [24] 1066 	movx	a,@r0
      0001D9 F5 82            [12] 1067 	mov	dpl,a
      0001DB 22               [24] 1068 	ret
      0001DC                       1069 00102$:
                                   1070 ;	radio/packet.c:160: c = serial_peek2();
      0001DC C0 04            [24] 1071 	push	ar4
      0001DE 12r00r00         [24] 1072 	lcall	_serial_peek2
      0001E1 85 82*09         [24] 1073 	mov	_mavlink_frame_c_2_157,dpl
      0001E4 D0 04            [24] 1074 	pop	ar4
                                   1075 ;	radio/packet.c:161: if (c >= 255 - 8 || 
      0001E6 74 09            [12] 1076 	mov	a,#0x100 - 0xF7
      0001E8 25*09            [12] 1077 	add	a,_mavlink_frame_c_2_157
      0001EA 50 03            [24] 1078 	jnc	00160$
      0001EC 02r02rF7         [24] 1079 	ljmp	00116$
      0001EF                       1080 00160$:
                                   1081 ;	radio/packet.c:162: c+8 > max_xmit - last_sent_len) {
      0001EF C0 04            [24] 1082 	push	ar4
      0001F1 85*09*0A         [24] 1083 	mov	_mavlink_frame_sloc0_1_0,_mavlink_frame_c_2_157
      0001F4 75*0B 00         [24] 1084 	mov	(_mavlink_frame_sloc0_1_0 + 1),#0x00
      0001F7 74 08            [12] 1085 	mov	a,#0x08
      0001F9 25*0A            [12] 1086 	add	a,_mavlink_frame_sloc0_1_0
      0001FB FB               [12] 1087 	mov	r3,a
      0001FC E4               [12] 1088 	clr	a
      0001FD 35*0B            [12] 1089 	addc	a,(_mavlink_frame_sloc0_1_0 + 1)
      0001FF FE               [12] 1090 	mov	r6,a
      000200 AA*0C            [24] 1091 	mov	r2,_mavlink_frame_sloc1_1_0
      000202 7F 00            [12] 1092 	mov	r7,#0x00
      000204 78r00            [12] 1093 	mov	r0,#_last_sent_len
      000206 E2               [24] 1094 	movx	a,@r0
      000207 FC               [12] 1095 	mov	r4,a
      000208 7D 00            [12] 1096 	mov	r5,#0x00
      00020A EA               [12] 1097 	mov	a,r2
      00020B C3               [12] 1098 	clr	c
      00020C 9C               [12] 1099 	subb	a,r4
      00020D FA               [12] 1100 	mov	r2,a
      00020E EF               [12] 1101 	mov	a,r7
      00020F 9D               [12] 1102 	subb	a,r5
      000210 FF               [12] 1103 	mov	r7,a
      000211 C3               [12] 1104 	clr	c
      000212 EA               [12] 1105 	mov	a,r2
      000213 9B               [12] 1106 	subb	a,r3
      000214 EF               [12] 1107 	mov	a,r7
      000215 64 80            [12] 1108 	xrl	a,#0x80
      000217 8E F0            [24] 1109 	mov	b,r6
      000219 63 F0 80         [24] 1110 	xrl	b,#0x80
      00021C 95 F0            [12] 1111 	subb	a,b
      00021E D0 04            [24] 1112 	pop	ar4
      000220 50 03            [24] 1113 	jnc	00161$
      000222 02r02rF7         [24] 1114 	ljmp	00116$
      000225                       1115 00161$:
                                   1116 ;	radio/packet.c:166: if (c+8 > slen) {
      000225 74 08            [12] 1117 	mov	a,#0x08
      000227 25*0A            [12] 1118 	add	a,_mavlink_frame_sloc0_1_0
      000229 FE               [12] 1119 	mov	r6,a
      00022A E4               [12] 1120 	clr	a
      00022B 35*0B            [12] 1121 	addc	a,(_mavlink_frame_sloc0_1_0 + 1)
      00022D FF               [12] 1122 	mov	r7,a
      00022E C3               [12] 1123 	clr	c
      00022F E5*03            [12] 1124 	mov	a,_mavlink_frame_slen_1_156
      000231 9E               [12] 1125 	subb	a,r6
      000232 E5*04            [12] 1126 	mov	a,(_mavlink_frame_slen_1_156 + 1)
      000234 9F               [12] 1127 	subb	a,r7
      000235 50 03            [24] 1128 	jnc	00162$
      000237 02r02rF7         [24] 1129 	ljmp	00116$
      00023A                       1130 00162$:
                                   1131 ;	radio/packet.c:173: if(high_offset != -1 && high_offset != offset && serial_peekx(6) == MSG_TYP_RC_OVERRIDE && c == MSG_LEN_RC_OVERRIDE) {
      00023A EC               [12] 1132 	mov	a,r4
      00023B 70 28            [24] 1133 	jnz	00109$
      00023D E5*05            [12] 1134 	mov	a,_mavlink_frame_offset_1_156
      00023F B5*07 07         [24] 1135 	cjne	a,_mavlink_frame_high_offset_1_156,00164$
      000242 E5*06            [12] 1136 	mov	a,(_mavlink_frame_offset_1_156 + 1)
      000244 B5*08 02         [24] 1137 	cjne	a,(_mavlink_frame_high_offset_1_156 + 1),00164$
      000247 80 1C            [24] 1138 	sjmp	00109$
      000249                       1139 00164$:
      000249 90 00 06         [24] 1140 	mov	dptr,#0x0006
      00024C C0 04            [24] 1141 	push	ar4
      00024E 12r00r00         [24] 1142 	lcall	_serial_peekx
      000251 AF 82            [24] 1143 	mov	r7,dpl
      000253 D0 04            [24] 1144 	pop	ar4
      000255 BF 46 0D         [24] 1145 	cjne	r7,#0x46,00109$
      000258 74 12            [12] 1146 	mov	a,#0x12
      00025A B5*09 08         [24] 1147 	cjne	a,_mavlink_frame_c_2_157,00109$
                                   1148 ;	radio/packet.c:175: c += 8;
      00025D 74 08            [12] 1149 	mov	a,#0x08
      00025F 25*09            [12] 1150 	add	a,_mavlink_frame_c_2_157
      000261 F5*09            [12] 1151 	mov	_mavlink_frame_c_2_157,a
      000263 80 70            [24] 1152 	sjmp	00110$
      000265                       1153 00109$:
                                   1154 ;	radio/packet.c:178: c += 8;
      000265 74 08            [12] 1155 	mov	a,#0x08
      000267 25*09            [12] 1156 	add	a,_mavlink_frame_c_2_157
      000269 F5*09            [12] 1157 	mov	_mavlink_frame_c_2_157,a
                                   1158 ;	radio/packet.c:181: serial_read_buf(&last_sent[last_sent_len], c);
      00026B 78r00            [12] 1159 	mov	r0,#_last_sent_len
      00026D E2               [24] 1160 	movx	a,@r0
      00026E 24rFC            [12] 1161 	add	a,#_last_sent
      000270 FE               [12] 1162 	mov	r6,a
      000271 E4               [12] 1163 	clr	a
      000272 34s00            [12] 1164 	addc	a,#(_last_sent >> 8)
      000274 FF               [12] 1165 	mov	r7,a
      000275 78r00            [12] 1166 	mov	r0,#_serial_read_buf_PARM_2
      000277 E5*09            [12] 1167 	mov	a,_mavlink_frame_c_2_157
      000279 F2               [24] 1168 	movx	@r0,a
      00027A 8E 82            [24] 1169 	mov	dpl,r6
      00027C 8F 83            [24] 1170 	mov	dph,r7
      00027E C0 04            [24] 1171 	push	ar4
      000280 12r00r00         [24] 1172 	lcall	_serial_read_buf
                                   1173 ;	radio/packet.c:182: memcpy(&buf[last_sent_len], &last_sent[last_sent_len], c);
      000283 78r0F            [12] 1174 	mov	r0,#_mavlink_frame_PARM_2
      000285 79r00            [12] 1175 	mov	r1,#_last_sent_len
      000287 E3               [24] 1176 	movx	a,@r1
      000288 C5 F0            [12] 1177 	xch	a,b
      00028A E2               [24] 1178 	movx	a,@r0
      00028B 25 F0            [12] 1179 	add	a,b
      00028D FE               [12] 1180 	mov	r6,a
      00028E 08               [12] 1181 	inc	r0
      00028F E2               [24] 1182 	movx	a,@r0
      000290 34 00            [12] 1183 	addc	a,#0x00
      000292 FF               [12] 1184 	mov	r7,a
      000293 7D 00            [12] 1185 	mov	r5,#0x00
      000295 78r00            [12] 1186 	mov	r0,#_last_sent_len
      000297 E2               [24] 1187 	movx	a,@r0
      000298 24rFC            [12] 1188 	add	a,#_last_sent
      00029A FA               [12] 1189 	mov	r2,a
      00029B E4               [12] 1190 	clr	a
      00029C 34s00            [12] 1191 	addc	a,#(_last_sent >> 8)
      00029E FB               [12] 1192 	mov	r3,a
      00029F 90r00r00         [24] 1193 	mov	dptr,#_memcpy_PARM_2
      0002A2 EA               [12] 1194 	mov	a,r2
      0002A3 F0               [24] 1195 	movx	@dptr,a
      0002A4 EB               [12] 1196 	mov	a,r3
      0002A5 A3               [24] 1197 	inc	dptr
      0002A6 F0               [24] 1198 	movx	@dptr,a
      0002A7 E4               [12] 1199 	clr	a
      0002A8 A3               [24] 1200 	inc	dptr
      0002A9 F0               [24] 1201 	movx	@dptr,a
      0002AA 90r00r00         [24] 1202 	mov	dptr,#_memcpy_PARM_3
      0002AD E5*09            [12] 1203 	mov	a,_mavlink_frame_c_2_157
      0002AF F0               [24] 1204 	movx	@dptr,a
      0002B0 E4               [12] 1205 	clr	a
      0002B1 A3               [24] 1206 	inc	dptr
      0002B2 F0               [24] 1207 	movx	@dptr,a
      0002B3 8E 82            [24] 1208 	mov	dpl,r6
      0002B5 8F 83            [24] 1209 	mov	dph,r7
      0002B7 8D F0            [24] 1210 	mov	b,r5
      0002B9 12r00r00         [24] 1211 	lcall	_memcpy
                                   1212 ;	radio/packet.c:184: check_heartbeat(buf+last_sent_len);
      0002BC 78r0F            [12] 1213 	mov	r0,#_mavlink_frame_PARM_2
      0002BE 79r00            [12] 1214 	mov	r1,#_last_sent_len
      0002C0 E3               [24] 1215 	movx	a,@r1
      0002C1 C5 F0            [12] 1216 	xch	a,b
      0002C3 E2               [24] 1217 	movx	a,@r0
      0002C4 25 F0            [12] 1218 	add	a,b
      0002C6 FE               [12] 1219 	mov	r6,a
      0002C7 08               [12] 1220 	inc	r0
      0002C8 E2               [24] 1221 	movx	a,@r0
      0002C9 34 00            [12] 1222 	addc	a,#0x00
      0002CB FF               [12] 1223 	mov	r7,a
      0002CC 8E 82            [24] 1224 	mov	dpl,r6
      0002CE 8F 83            [24] 1225 	mov	dph,r7
      0002D0 12r00r00         [24] 1226 	lcall	_check_heartbeat
      0002D3 D0 04            [24] 1227 	pop	ar4
      0002D5                       1228 00110$:
                                   1229 ;	radio/packet.c:187: last_sent_len += c;
      0002D5 78r00            [12] 1230 	mov	r0,#_last_sent_len
      0002D7 E2               [24] 1231 	movx	a,@r0
      0002D8 25*09            [12] 1232 	add	a,_mavlink_frame_c_2_157
      0002DA F2               [24] 1233 	movx	@r0,a
                                   1234 ;	radio/packet.c:188: slen -= c;
      0002DB AE*09            [24] 1235 	mov	r6,_mavlink_frame_c_2_157
      0002DD 7F 00            [12] 1236 	mov	r7,#0x00
      0002DF E5*03            [12] 1237 	mov	a,_mavlink_frame_slen_1_156
      0002E1 C3               [12] 1238 	clr	c
      0002E2 9E               [12] 1239 	subb	a,r6
      0002E3 F5*03            [12] 1240 	mov	_mavlink_frame_slen_1_156,a
      0002E5 E5*04            [12] 1241 	mov	a,(_mavlink_frame_slen_1_156 + 1)
      0002E7 9F               [12] 1242 	subb	a,r7
      0002E8 F5*04            [12] 1243 	mov	(_mavlink_frame_slen_1_156 + 1),a
                                   1244 ;	radio/packet.c:189: offset += c;
      0002EA EE               [12] 1245 	mov	a,r6
      0002EB 25*05            [12] 1246 	add	a,_mavlink_frame_offset_1_156
      0002ED F5*05            [12] 1247 	mov	_mavlink_frame_offset_1_156,a
      0002EF EF               [12] 1248 	mov	a,r7
      0002F0 35*06            [12] 1249 	addc	a,(_mavlink_frame_offset_1_156 + 1)
      0002F2 F5*06            [12] 1250 	mov	(_mavlink_frame_offset_1_156 + 1),a
      0002F4 02r01rB7         [24] 1251 	ljmp	00114$
      0002F7                       1252 00116$:
                                   1253 ;	radio/packet.c:192: return last_sent_len;
      0002F7 78r00            [12] 1254 	mov	r0,#_last_sent_len
      0002F9 E2               [24] 1255 	movx	a,@r0
      0002FA F5 82            [12] 1256 	mov	dpl,a
      0002FC 22               [24] 1257 	ret
                                   1258 ;------------------------------------------------------------
                                   1259 ;Allocation info for local variables in function 'packet_get_next'
                                   1260 ;------------------------------------------------------------
                                   1261 ;max_xmit                  Allocated with name '_packet_get_next_max_xmit_1_163'
                                   1262 ;slen                      Allocated with name '_packet_get_next_slen_1_164'
                                   1263 ;c                         Allocated to registers r7 
                                   1264 ;sloc0                     Allocated with name '_packet_get_next_sloc0_1_0'
                                   1265 ;------------------------------------------------------------
                                   1266 ;	radio/packet.c:198: packet_get_next(register uint8_t max_xmit, __xdata uint8_t * __pdata buf)
                                   1267 ;	-----------------------------------------
                                   1268 ;	 function packet_get_next
                                   1269 ;	-----------------------------------------
      0002FD                       1270 _packet_get_next:
      0002FD 85 82*0D         [24] 1271 	mov	_packet_get_next_max_xmit_1_163,dpl
                                   1272 ;	radio/packet.c:207: slen = serial_read_available();
      000300 12r00r00         [24] 1273 	lcall	_serial_read_available
      000303 85 82*0E         [24] 1274 	mov	_packet_get_next_slen_1_164,dpl
      000306 85 83*0F         [24] 1275 	mov	(_packet_get_next_slen_1_164 + 1),dph
                                   1276 ;	radio/packet.c:208: if (force_resend ||
      000309 20*03 16         [24] 1277 	jb	_force_resend,00103$
                                   1278 ;	radio/packet.c:209: (feature_opportunistic_resend &&
      00030C 30*00 65         [24] 1279 	jnb	_feature_opportunistic_resend,00104$
      00030F 20*00 62         [24] 1280 	jb	_last_sent_is_resend,00104$
                                   1281 ;	radio/packet.c:211: last_sent_len != 0 && 
      000312 78r00            [12] 1282 	mov	r0,#_last_sent_len
      000314 E2               [24] 1283 	movx	a,@r0
      000315 60 5D            [24] 1284 	jz	00104$
                                   1285 ;	radio/packet.c:212: slen < PACKET_RESEND_THRESHOLD)) {
      000317 C3               [12] 1286 	clr	c
      000318 E5*0E            [12] 1287 	mov	a,_packet_get_next_slen_1_164
      00031A 94 20            [12] 1288 	subb	a,#0x20
      00031C E5*0F            [12] 1289 	mov	a,(_packet_get_next_slen_1_164 + 1)
      00031E 94 00            [12] 1290 	subb	a,#0x00
      000320 50 52            [24] 1291 	jnc	00104$
      000322                       1292 00103$:
                                   1293 ;	radio/packet.c:213: if (max_xmit < last_sent_len) {
      000322 78r00            [12] 1294 	mov	r0,#_last_sent_len
      000324 C3               [12] 1295 	clr	c
      000325 E2               [24] 1296 	movx	a,@r0
      000326 F5 F0            [12] 1297 	mov	b,a
      000328 E5*0D            [12] 1298 	mov	a,_packet_get_next_max_xmit_1_163
      00032A 95 F0            [12] 1299 	subb	a,b
      00032C 50 08            [24] 1300 	jnc	00102$
                                   1301 ;	radio/packet.c:214: last_sent_len = 0;
      00032E 78r00            [12] 1302 	mov	r0,#_last_sent_len
      000330 E4               [12] 1303 	clr	a
      000331 F2               [24] 1304 	movx	@r0,a
                                   1305 ;	radio/packet.c:215: return 0;
      000332 75 82 00         [24] 1306 	mov	dpl,#0x00
      000335 22               [24] 1307 	ret
      000336                       1308 00102$:
                                   1309 ;	radio/packet.c:217: last_sent_is_resend = true;
      000336 D2*00            [12] 1310 	setb	_last_sent_is_resend
                                   1311 ;	radio/packet.c:218: force_resend = false;
      000338 C2*03            [12] 1312 	clr	_force_resend
                                   1313 ;	radio/packet.c:219: memcpy(buf, last_sent, last_sent_len);
      00033A 78r11            [12] 1314 	mov	r0,#_packet_get_next_PARM_2
      00033C E2               [24] 1315 	movx	a,@r0
      00033D FA               [12] 1316 	mov	r2,a
      00033E 08               [12] 1317 	inc	r0
      00033F E2               [24] 1318 	movx	a,@r0
      000340 FB               [12] 1319 	mov	r3,a
      000341 7C 00            [12] 1320 	mov	r4,#0x00
      000343 90r00r00         [24] 1321 	mov	dptr,#_memcpy_PARM_2
      000346 74rFC            [12] 1322 	mov	a,#_last_sent
      000348 F0               [24] 1323 	movx	@dptr,a
      000349 74s00            [12] 1324 	mov	a,#(_last_sent >> 8)
      00034B A3               [24] 1325 	inc	dptr
      00034C F0               [24] 1326 	movx	@dptr,a
      00034D E4               [12] 1327 	clr	a
      00034E A3               [24] 1328 	inc	dptr
      00034F F0               [24] 1329 	movx	@dptr,a
      000350 78r00            [12] 1330 	mov	r0,#_last_sent_len
      000352 90r00r00         [24] 1331 	mov	dptr,#_memcpy_PARM_3
      000355 E2               [24] 1332 	movx	a,@r0
      000356 F0               [24] 1333 	movx	@dptr,a
      000357 E4               [12] 1334 	clr	a
      000358 A3               [24] 1335 	inc	dptr
      000359 F0               [24] 1336 	movx	@dptr,a
      00035A 8A 82            [24] 1337 	mov	dpl,r2
      00035C 8B 83            [24] 1338 	mov	dph,r3
      00035E 8C F0            [24] 1339 	mov	b,r4
      000360 12r00r00         [24] 1340 	lcall	_memcpy
                                   1341 ;	radio/packet.c:220: slen = last_sent_len;
      000363 78r00            [12] 1342 	mov	r0,#_last_sent_len
      000365 E2               [24] 1343 	movx	a,@r0
      000366 F5*0E            [12] 1344 	mov	_packet_get_next_slen_1_164,a
      000368 75*0F 00         [24] 1345 	mov	(_packet_get_next_slen_1_164 + 1),#0x00
                                   1346 ;	radio/packet.c:221: last_sent_len = 0;
      00036B 78r00            [12] 1347 	mov	r0,#_last_sent_len
      00036D E4               [12] 1348 	clr	a
      00036E F2               [24] 1349 	movx	@r0,a
                                   1350 ;	radio/packet.c:222: return (slen & 0xFF);
      00036F AB*0E            [24] 1351 	mov	r3,_packet_get_next_slen_1_164
      000371 8B 82            [24] 1352 	mov	dpl,r3
      000373 22               [24] 1353 	ret
      000374                       1354 00104$:
                                   1355 ;	radio/packet.c:225: last_sent_is_resend = false;
      000374 C2*00            [12] 1356 	clr	_last_sent_is_resend
                                   1357 ;	radio/packet.c:227: if (injected_packet) {
      000376 20*04 03         [24] 1358 	jb	_injected_packet,00240$
      000379 02r04r2C         [24] 1359 	ljmp	00112$
      00037C                       1360 00240$:
                                   1361 ;	radio/packet.c:229: slen = last_sent_len;
      00037C 78r00            [12] 1362 	mov	r0,#_last_sent_len
      00037E E2               [24] 1363 	movx	a,@r0
      00037F FB               [12] 1364 	mov	r3,a
      000380 7C 00            [12] 1365 	mov	r4,#0x00
      000382 8B*0E            [24] 1366 	mov	_packet_get_next_slen_1_164,r3
      000384 8C*0F            [24] 1367 	mov	(_packet_get_next_slen_1_164 + 1),r4
                                   1368 ;	radio/packet.c:230: if (max_xmit < slen) {
      000386 85*0D*10         [24] 1369 	mov	_packet_get_next_sloc0_1_0,_packet_get_next_max_xmit_1_163
                                   1370 ;	1-genFromRTrack replaced	mov	(_packet_get_next_sloc0_1_0 + 1),#0x00
      000389 8C*11            [24] 1371 	mov	(_packet_get_next_sloc0_1_0 + 1),r4
      00038B C3               [12] 1372 	clr	c
      00038C E5*10            [12] 1373 	mov	a,_packet_get_next_sloc0_1_0
      00038E 95*0E            [12] 1374 	subb	a,_packet_get_next_slen_1_164
      000390 E5*11            [12] 1375 	mov	a,(_packet_get_next_sloc0_1_0 + 1)
      000392 95*0F            [12] 1376 	subb	a,(_packet_get_next_slen_1_164 + 1)
      000394 50 65            [24] 1377 	jnc	00110$
                                   1378 ;	radio/packet.c:232: memcpy(buf, last_sent, max_xmit);
      000396 78r11            [12] 1379 	mov	r0,#_packet_get_next_PARM_2
      000398 E2               [24] 1380 	movx	a,@r0
      000399 FA               [12] 1381 	mov	r2,a
      00039A 08               [12] 1382 	inc	r0
      00039B E2               [24] 1383 	movx	a,@r0
      00039C FE               [12] 1384 	mov	r6,a
      00039D 7F 00            [12] 1385 	mov	r7,#0x00
      00039F 90r00r00         [24] 1386 	mov	dptr,#_memcpy_PARM_2
      0003A2 74rFC            [12] 1387 	mov	a,#_last_sent
      0003A4 F0               [24] 1388 	movx	@dptr,a
      0003A5 74s00            [12] 1389 	mov	a,#(_last_sent >> 8)
      0003A7 A3               [24] 1390 	inc	dptr
      0003A8 F0               [24] 1391 	movx	@dptr,a
      0003A9 E4               [12] 1392 	clr	a
      0003AA A3               [24] 1393 	inc	dptr
      0003AB F0               [24] 1394 	movx	@dptr,a
      0003AC 90r00r00         [24] 1395 	mov	dptr,#_memcpy_PARM_3
      0003AF E5*10            [12] 1396 	mov	a,_packet_get_next_sloc0_1_0
      0003B1 F0               [24] 1397 	movx	@dptr,a
      0003B2 E5*11            [12] 1398 	mov	a,(_packet_get_next_sloc0_1_0 + 1)
      0003B4 A3               [24] 1399 	inc	dptr
      0003B5 F0               [24] 1400 	movx	@dptr,a
      0003B6 8A 82            [24] 1401 	mov	dpl,r2
      0003B8 8E 83            [24] 1402 	mov	dph,r6
      0003BA 8F F0            [24] 1403 	mov	b,r7
      0003BC 12r00r00         [24] 1404 	lcall	_memcpy
                                   1405 ;	radio/packet.c:233: memcpy(last_sent, &last_sent[max_xmit], slen - max_xmit);
      0003BF E5*0D            [12] 1406 	mov	a,_packet_get_next_max_xmit_1_163
      0003C1 24rFC            [12] 1407 	add	a,#_last_sent
      0003C3 FE               [12] 1408 	mov	r6,a
      0003C4 E4               [12] 1409 	clr	a
      0003C5 34s00            [12] 1410 	addc	a,#(_last_sent >> 8)
      0003C7 FF               [12] 1411 	mov	r7,a
      0003C8 90r00r00         [24] 1412 	mov	dptr,#_memcpy_PARM_2
      0003CB EE               [12] 1413 	mov	a,r6
      0003CC F0               [24] 1414 	movx	@dptr,a
      0003CD EF               [12] 1415 	mov	a,r7
      0003CE A3               [24] 1416 	inc	dptr
      0003CF F0               [24] 1417 	movx	@dptr,a
      0003D0 E4               [12] 1418 	clr	a
      0003D1 A3               [24] 1419 	inc	dptr
      0003D2 F0               [24] 1420 	movx	@dptr,a
      0003D3 AE*0D            [24] 1421 	mov	r6,_packet_get_next_max_xmit_1_163
      0003D5 7F 00            [12] 1422 	mov	r7,#0x00
      0003D7 90r00r00         [24] 1423 	mov	dptr,#_memcpy_PARM_3
      0003DA E5*0E            [12] 1424 	mov	a,_packet_get_next_slen_1_164
      0003DC C3               [12] 1425 	clr	c
      0003DD 9E               [12] 1426 	subb	a,r6
      0003DE F0               [24] 1427 	movx	@dptr,a
      0003DF E5*0F            [12] 1428 	mov	a,(_packet_get_next_slen_1_164 + 1)
      0003E1 9F               [12] 1429 	subb	a,r7
      0003E2 A3               [24] 1430 	inc	dptr
      0003E3 F0               [24] 1431 	movx	@dptr,a
      0003E4 90r00rFC         [24] 1432 	mov	dptr,#_last_sent
      0003E7 75 F0 00         [24] 1433 	mov	b,#0x00
      0003EA 12r00r00         [24] 1434 	lcall	_memcpy
                                   1435 ;	radio/packet.c:234: last_sent_len = slen - max_xmit;
      0003ED E5*0E            [12] 1436 	mov	a,_packet_get_next_slen_1_164
      0003EF C3               [12] 1437 	clr	c
      0003F0 95*0D            [12] 1438 	subb	a,_packet_get_next_max_xmit_1_163
      0003F2 78r00            [12] 1439 	mov	r0,#_last_sent_len
      0003F4 F2               [24] 1440 	movx	@r0,a
                                   1441 ;	radio/packet.c:235: last_sent_is_injected = true;
      0003F5 D2*01            [12] 1442 	setb	_last_sent_is_injected
                                   1443 ;	radio/packet.c:236: return max_xmit;
      0003F7 85*0D 82         [24] 1444 	mov	dpl,_packet_get_next_max_xmit_1_163
      0003FA 22               [24] 1445 	ret
      0003FB                       1446 00110$:
                                   1447 ;	radio/packet.c:239: memcpy(buf, last_sent, last_sent_len);
      0003FB 78r11            [12] 1448 	mov	r0,#_packet_get_next_PARM_2
      0003FD E2               [24] 1449 	movx	a,@r0
      0003FE FD               [12] 1450 	mov	r5,a
      0003FF 08               [12] 1451 	inc	r0
      000400 E2               [24] 1452 	movx	a,@r0
      000401 FE               [12] 1453 	mov	r6,a
      000402 7F 00            [12] 1454 	mov	r7,#0x00
      000404 90r00r00         [24] 1455 	mov	dptr,#_memcpy_PARM_2
      000407 74rFC            [12] 1456 	mov	a,#_last_sent
      000409 F0               [24] 1457 	movx	@dptr,a
      00040A 74s00            [12] 1458 	mov	a,#(_last_sent >> 8)
      00040C A3               [24] 1459 	inc	dptr
      00040D F0               [24] 1460 	movx	@dptr,a
      00040E E4               [12] 1461 	clr	a
      00040F A3               [24] 1462 	inc	dptr
      000410 F0               [24] 1463 	movx	@dptr,a
      000411 90r00r00         [24] 1464 	mov	dptr,#_memcpy_PARM_3
      000414 EB               [12] 1465 	mov	a,r3
      000415 F0               [24] 1466 	movx	@dptr,a
      000416 EC               [12] 1467 	mov	a,r4
      000417 A3               [24] 1468 	inc	dptr
      000418 F0               [24] 1469 	movx	@dptr,a
      000419 8D 82            [24] 1470 	mov	dpl,r5
      00041B 8E 83            [24] 1471 	mov	dph,r6
      00041D 8F F0            [24] 1472 	mov	b,r7
      00041F 12r00r00         [24] 1473 	lcall	_memcpy
                                   1474 ;	radio/packet.c:240: injected_packet = false;
      000422 C2*04            [12] 1475 	clr	_injected_packet
                                   1476 ;	radio/packet.c:241: last_sent_is_injected = true;
      000424 D2*01            [12] 1477 	setb	_last_sent_is_injected
                                   1478 ;	radio/packet.c:242: return last_sent_len;
      000426 78r00            [12] 1479 	mov	r0,#_last_sent_len
      000428 E2               [24] 1480 	movx	a,@r0
      000429 F5 82            [12] 1481 	mov	dpl,a
      00042B 22               [24] 1482 	ret
      00042C                       1483 00112$:
                                   1484 ;	radio/packet.c:245: last_sent_is_injected = false;
      00042C C2*01            [12] 1485 	clr	_last_sent_is_injected
                                   1486 ;	radio/packet.c:249: if (slen > max_xmit) {
      00042E AE*0D            [24] 1487 	mov	r6,_packet_get_next_max_xmit_1_163
      000430 7F 00            [12] 1488 	mov	r7,#0x00
      000432 C3               [12] 1489 	clr	c
      000433 EE               [12] 1490 	mov	a,r6
      000434 95*0E            [12] 1491 	subb	a,_packet_get_next_slen_1_164
      000436 EF               [12] 1492 	mov	a,r7
      000437 95*0F            [12] 1493 	subb	a,(_packet_get_next_slen_1_164 + 1)
      000439 50 04            [24] 1494 	jnc	00114$
                                   1495 ;	radio/packet.c:250: slen = max_xmit;
      00043B 8E*0E            [24] 1496 	mov	_packet_get_next_slen_1_164,r6
      00043D 8F*0F            [24] 1497 	mov	(_packet_get_next_slen_1_164 + 1),r7
      00043F                       1498 00114$:
                                   1499 ;	radio/packet.c:253: last_sent_len = 0;
      00043F 78r00            [12] 1500 	mov	r0,#_last_sent_len
      000441 E4               [12] 1501 	clr	a
      000442 F2               [24] 1502 	movx	@r0,a
                                   1503 ;	radio/packet.c:255: if (slen == 0) {
      000443 E5*0E            [12] 1504 	mov	a,_packet_get_next_slen_1_164
      000445 45*0F            [12] 1505 	orl	a,(_packet_get_next_slen_1_164 + 1)
                                   1506 ;	radio/packet.c:257: return 0;
      000447 70 03            [24] 1507 	jnz	00116$
      000449 F5 82            [12] 1508 	mov	dpl,a
      00044B 22               [24] 1509 	ret
      00044C                       1510 00116$:
                                   1511 ;	radio/packet.c:260: if (!feature_mavlink_framing) {
      00044C 90r00r00         [24] 1512 	mov	dptr,#_feature_mavlink_framing
      00044F E0               [24] 1513 	movx	a,@dptr
      000450 70 53            [24] 1514 	jnz	00122$
                                   1515 ;	radio/packet.c:262: if (slen > 0 && serial_read_buf(buf, slen)) {
      000452 E5*0E            [12] 1516 	mov	a,_packet_get_next_slen_1_164
      000454 45*0F            [12] 1517 	orl	a,(_packet_get_next_slen_1_164 + 1)
      000456 60 43            [24] 1518 	jz	00118$
      000458 AD*0E            [24] 1519 	mov	r5,_packet_get_next_slen_1_164
      00045A 78r00            [12] 1520 	mov	r0,#_serial_read_buf_PARM_2
      00045C ED               [12] 1521 	mov	a,r5
      00045D F2               [24] 1522 	movx	@r0,a
      00045E 78r11            [12] 1523 	mov	r0,#_packet_get_next_PARM_2
      000460 E2               [24] 1524 	movx	a,@r0
      000461 F5 82            [12] 1525 	mov	dpl,a
      000463 08               [12] 1526 	inc	r0
      000464 E2               [24] 1527 	movx	a,@r0
      000465 F5 83            [12] 1528 	mov	dph,a
      000467 C0 05            [24] 1529 	push	ar5
      000469 12r00r00         [24] 1530 	lcall	_serial_read_buf
      00046C D0 05            [24] 1531 	pop	ar5
      00046E 50 2B            [24] 1532 	jnc	00118$
                                   1533 ;	radio/packet.c:263: memcpy(last_sent, buf, slen);
      000470 78r11            [12] 1534 	mov	r0,#_packet_get_next_PARM_2
      000472 90r00r00         [24] 1535 	mov	dptr,#_memcpy_PARM_2
      000475 E2               [24] 1536 	movx	a,@r0
      000476 F0               [24] 1537 	movx	@dptr,a
      000477 08               [12] 1538 	inc	r0
      000478 E2               [24] 1539 	movx	a,@r0
      000479 A3               [24] 1540 	inc	dptr
      00047A F0               [24] 1541 	movx	@dptr,a
      00047B E4               [12] 1542 	clr	a
      00047C A3               [24] 1543 	inc	dptr
      00047D F0               [24] 1544 	movx	@dptr,a
      00047E 90r00r00         [24] 1545 	mov	dptr,#_memcpy_PARM_3
      000481 E5*0E            [12] 1546 	mov	a,_packet_get_next_slen_1_164
      000483 F0               [24] 1547 	movx	@dptr,a
      000484 E5*0F            [12] 1548 	mov	a,(_packet_get_next_slen_1_164 + 1)
      000486 A3               [24] 1549 	inc	dptr
      000487 F0               [24] 1550 	movx	@dptr,a
      000488 90r00rFC         [24] 1551 	mov	dptr,#_last_sent
      00048B 75 F0 00         [24] 1552 	mov	b,#0x00
      00048E C0 05            [24] 1553 	push	ar5
      000490 12r00r00         [24] 1554 	lcall	_memcpy
      000493 D0 05            [24] 1555 	pop	ar5
                                   1556 ;	radio/packet.c:264: last_sent_len = slen;
      000495 78r00            [12] 1557 	mov	r0,#_last_sent_len
      000497 ED               [12] 1558 	mov	a,r5
      000498 F2               [24] 1559 	movx	@r0,a
      000499 80 04            [24] 1560 	sjmp	00119$
      00049B                       1561 00118$:
                                   1562 ;	radio/packet.c:266: last_sent_len = 0;
      00049B 78r00            [12] 1563 	mov	r0,#_last_sent_len
      00049D E4               [12] 1564 	clr	a
      00049E F2               [24] 1565 	movx	@r0,a
      00049F                       1566 00119$:
                                   1567 ;	radio/packet.c:268: return last_sent_len;
      00049F 78r00            [12] 1568 	mov	r0,#_last_sent_len
      0004A1 E2               [24] 1569 	movx	a,@r0
      0004A2 F5 82            [12] 1570 	mov	dpl,a
      0004A4 22               [24] 1571 	ret
      0004A5                       1572 00122$:
                                   1573 ;	radio/packet.c:273: if (mav_pkt_len == 1) {
      0004A5 78r04            [12] 1574 	mov	r0,#_mav_pkt_len
      0004A7 E2               [24] 1575 	movx	a,@r0
      0004A8 B4 01 02         [24] 1576 	cjne	a,#0x01,00247$
      0004AB 80 03            [24] 1577 	sjmp	00248$
      0004AD                       1578 00247$:
      0004AD 02r05r3A         [24] 1579 	ljmp	00128$
      0004B0                       1580 00248$:
                                   1581 ;	radio/packet.c:275: if (slen == 1) {
      0004B0 74 01            [12] 1582 	mov	a,#0x01
      0004B2 B5*0E 06         [24] 1583 	cjne	a,_packet_get_next_slen_1_164,00249$
      0004B5 E4               [12] 1584 	clr	a
      0004B6 B5*0F 02         [24] 1585 	cjne	a,(_packet_get_next_slen_1_164 + 1),00249$
      0004B9 80 02            [24] 1586 	sjmp	00250$
      0004BB                       1587 00249$:
      0004BB 80 79            [24] 1588 	sjmp	00126$
      0004BD                       1589 00250$:
                                   1590 ;	radio/packet.c:276: if ((uint16_t)(timer2_tick() - mav_pkt_start_time) > mav_pkt_max_time) {
      0004BD 12r00r00         [24] 1591 	lcall	_timer2_tick
      0004C0 AE 82            [24] 1592 	mov	r6,dpl
      0004C2 AF 83            [24] 1593 	mov	r7,dph
      0004C4 78r05            [12] 1594 	mov	r0,#_mav_pkt_start_time
      0004C6 D3               [12] 1595 	setb	c
      0004C7 E2               [24] 1596 	movx	a,@r0
      0004C8 9E               [12] 1597 	subb	a,r6
      0004C9 F4               [12] 1598 	cpl	a
      0004CA B3               [12] 1599 	cpl	c
      0004CB FE               [12] 1600 	mov	r6,a
      0004CC B3               [12] 1601 	cpl	c
      0004CD 08               [12] 1602 	inc	r0
      0004CE E2               [24] 1603 	movx	a,@r0
      0004CF 9F               [12] 1604 	subb	a,r7
      0004D0 F4               [12] 1605 	cpl	a
      0004D1 FF               [12] 1606 	mov	r7,a
      0004D2 78r07            [12] 1607 	mov	r0,#_mav_pkt_max_time
      0004D4 C3               [12] 1608 	clr	c
      0004D5 E2               [24] 1609 	movx	a,@r0
      0004D6 9E               [12] 1610 	subb	a,r6
      0004D7 08               [12] 1611 	inc	r0
      0004D8 E2               [24] 1612 	movx	a,@r0
      0004D9 9F               [12] 1613 	subb	a,r7
      0004DA 50 56            [24] 1614 	jnc	00124$
                                   1615 ;	radio/packet.c:278: last_sent[last_sent_len++] = serial_read();
      0004DC 78r00            [12] 1616 	mov	r0,#_last_sent_len
      0004DE E2               [24] 1617 	movx	a,@r0
      0004DF FF               [12] 1618 	mov	r7,a
      0004E0 78r00            [12] 1619 	mov	r0,#_last_sent_len
      0004E2 04               [12] 1620 	inc	a
      0004E3 F2               [24] 1621 	movx	@r0,a
      0004E4 EF               [12] 1622 	mov	a,r7
      0004E5 24rFC            [12] 1623 	add	a,#_last_sent
      0004E7 FF               [12] 1624 	mov	r7,a
      0004E8 E4               [12] 1625 	clr	a
      0004E9 34s00            [12] 1626 	addc	a,#(_last_sent >> 8)
      0004EB FE               [12] 1627 	mov	r6,a
      0004EC C0 07            [24] 1628 	push	ar7
      0004EE C0 06            [24] 1629 	push	ar6
      0004F0 12r00r00         [24] 1630 	lcall	_serial_read
      0004F3 AD 82            [24] 1631 	mov	r5,dpl
      0004F5 D0 06            [24] 1632 	pop	ar6
      0004F7 D0 07            [24] 1633 	pop	ar7
      0004F9 8F 82            [24] 1634 	mov	dpl,r7
      0004FB 8E 83            [24] 1635 	mov	dph,r6
      0004FD ED               [12] 1636 	mov	a,r5
      0004FE F0               [24] 1637 	movx	@dptr,a
                                   1638 ;	radio/packet.c:279: memcpy(buf, last_sent, last_sent_len);				
      0004FF 78r11            [12] 1639 	mov	r0,#_packet_get_next_PARM_2
      000501 E2               [24] 1640 	movx	a,@r0
      000502 FD               [12] 1641 	mov	r5,a
      000503 08               [12] 1642 	inc	r0
      000504 E2               [24] 1643 	movx	a,@r0
      000505 FE               [12] 1644 	mov	r6,a
      000506 7F 00            [12] 1645 	mov	r7,#0x00
      000508 90r00r00         [24] 1646 	mov	dptr,#_memcpy_PARM_2
      00050B 74rFC            [12] 1647 	mov	a,#_last_sent
      00050D F0               [24] 1648 	movx	@dptr,a
      00050E 74s00            [12] 1649 	mov	a,#(_last_sent >> 8)
      000510 A3               [24] 1650 	inc	dptr
      000511 F0               [24] 1651 	movx	@dptr,a
      000512 E4               [12] 1652 	clr	a
      000513 A3               [24] 1653 	inc	dptr
      000514 F0               [24] 1654 	movx	@dptr,a
      000515 78r00            [12] 1655 	mov	r0,#_last_sent_len
      000517 90r00r00         [24] 1656 	mov	dptr,#_memcpy_PARM_3
      00051A E2               [24] 1657 	movx	a,@r0
      00051B F0               [24] 1658 	movx	@dptr,a
      00051C E4               [12] 1659 	clr	a
      00051D A3               [24] 1660 	inc	dptr
      00051E F0               [24] 1661 	movx	@dptr,a
      00051F 8D 82            [24] 1662 	mov	dpl,r5
      000521 8E 83            [24] 1663 	mov	dph,r6
      000523 8F F0            [24] 1664 	mov	b,r7
      000525 12r00r00         [24] 1665 	lcall	_memcpy
                                   1666 ;	radio/packet.c:280: mav_pkt_len = 0;
      000528 78r04            [12] 1667 	mov	r0,#_mav_pkt_len
      00052A E4               [12] 1668 	clr	a
      00052B F2               [24] 1669 	movx	@r0,a
                                   1670 ;	radio/packet.c:281: return last_sent_len;
      00052C 78r00            [12] 1671 	mov	r0,#_last_sent_len
      00052E E2               [24] 1672 	movx	a,@r0
      00052F F5 82            [12] 1673 	mov	dpl,a
      000531 22               [24] 1674 	ret
      000532                       1675 00124$:
                                   1676 ;	radio/packet.c:284: return 0;
      000532 75 82 00         [24] 1677 	mov	dpl,#0x00
      000535 22               [24] 1678 	ret
      000536                       1679 00126$:
                                   1680 ;	radio/packet.c:288: mav_pkt_len = 0;
      000536 78r04            [12] 1681 	mov	r0,#_mav_pkt_len
      000538 E4               [12] 1682 	clr	a
      000539 F2               [24] 1683 	movx	@r0,a
      00053A                       1684 00128$:
                                   1685 ;	radio/packet.c:292: if (mav_pkt_len != 0) {
      00053A 78r04            [12] 1686 	mov	r0,#_mav_pkt_len
      00053C E2               [24] 1687 	movx	a,@r0
      00053D 70 03            [24] 1688 	jnz	00252$
      00053F 02r05rC9         [24] 1689 	ljmp	00179$
      000542                       1690 00252$:
                                   1691 ;	radio/packet.c:293: if (slen < mav_pkt_len) {
      000542 78r04            [12] 1692 	mov	r0,#_mav_pkt_len
      000544 E2               [24] 1693 	movx	a,@r0
      000545 FE               [12] 1694 	mov	r6,a
      000546 7F 00            [12] 1695 	mov	r7,#0x00
      000548 C3               [12] 1696 	clr	c
      000549 E5*0E            [12] 1697 	mov	a,_packet_get_next_slen_1_164
      00054B 9E               [12] 1698 	subb	a,r6
      00054C E5*0F            [12] 1699 	mov	a,(_packet_get_next_slen_1_164 + 1)
      00054E 9F               [12] 1700 	subb	a,r7
      00054F 50 68            [24] 1701 	jnc	00132$
                                   1702 ;	radio/packet.c:294: if ((uint16_t)(timer2_tick() - mav_pkt_start_time) > mav_pkt_max_time) {
      000551 12r00r00         [24] 1703 	lcall	_timer2_tick
      000554 AE 82            [24] 1704 	mov	r6,dpl
      000556 AF 83            [24] 1705 	mov	r7,dph
      000558 78r05            [12] 1706 	mov	r0,#_mav_pkt_start_time
      00055A D3               [12] 1707 	setb	c
      00055B E2               [24] 1708 	movx	a,@r0
      00055C 9E               [12] 1709 	subb	a,r6
      00055D F4               [12] 1710 	cpl	a
      00055E B3               [12] 1711 	cpl	c
      00055F FE               [12] 1712 	mov	r6,a
      000560 B3               [12] 1713 	cpl	c
      000561 08               [12] 1714 	inc	r0
      000562 E2               [24] 1715 	movx	a,@r0
      000563 9F               [12] 1716 	subb	a,r7
      000564 F4               [12] 1717 	cpl	a
      000565 FF               [12] 1718 	mov	r7,a
      000566 78r07            [12] 1719 	mov	r0,#_mav_pkt_max_time
      000568 C3               [12] 1720 	clr	c
      000569 E2               [24] 1721 	movx	a,@r0
      00056A 9E               [12] 1722 	subb	a,r6
      00056B 08               [12] 1723 	inc	r0
      00056C E2               [24] 1724 	movx	a,@r0
      00056D 9F               [12] 1725 	subb	a,r7
      00056E 50 45            [24] 1726 	jnc	00130$
                                   1727 ;	radio/packet.c:297: serial_read_buf(last_sent, slen);
      000570 AD*0E            [24] 1728 	mov	r5,_packet_get_next_slen_1_164
      000572 78r00            [12] 1729 	mov	r0,#_serial_read_buf_PARM_2
      000574 ED               [12] 1730 	mov	a,r5
      000575 F2               [24] 1731 	movx	@r0,a
      000576 90r00rFC         [24] 1732 	mov	dptr,#_last_sent
      000579 C0 05            [24] 1733 	push	ar5
      00057B 12r00r00         [24] 1734 	lcall	_serial_read_buf
      00057E D0 05            [24] 1735 	pop	ar5
                                   1736 ;	radio/packet.c:298: last_sent_len = slen;
      000580 78r00            [12] 1737 	mov	r0,#_last_sent_len
      000582 ED               [12] 1738 	mov	a,r5
      000583 F2               [24] 1739 	movx	@r0,a
                                   1740 ;	radio/packet.c:299: memcpy(buf, last_sent, last_sent_len);
      000584 78r11            [12] 1741 	mov	r0,#_packet_get_next_PARM_2
      000586 E2               [24] 1742 	movx	a,@r0
      000587 FC               [12] 1743 	mov	r4,a
      000588 08               [12] 1744 	inc	r0
      000589 E2               [24] 1745 	movx	a,@r0
      00058A FE               [12] 1746 	mov	r6,a
      00058B 7F 00            [12] 1747 	mov	r7,#0x00
      00058D 90r00r00         [24] 1748 	mov	dptr,#_memcpy_PARM_2
      000590 74rFC            [12] 1749 	mov	a,#_last_sent
      000592 F0               [24] 1750 	movx	@dptr,a
      000593 74s00            [12] 1751 	mov	a,#(_last_sent >> 8)
      000595 A3               [24] 1752 	inc	dptr
      000596 F0               [24] 1753 	movx	@dptr,a
      000597 E4               [12] 1754 	clr	a
      000598 A3               [24] 1755 	inc	dptr
      000599 F0               [24] 1756 	movx	@dptr,a
      00059A 90r00r00         [24] 1757 	mov	dptr,#_memcpy_PARM_3
      00059D ED               [12] 1758 	mov	a,r5
      00059E F0               [24] 1759 	movx	@dptr,a
      00059F E4               [12] 1760 	clr	a
      0005A0 A3               [24] 1761 	inc	dptr
      0005A1 F0               [24] 1762 	movx	@dptr,a
      0005A2 8C 82            [24] 1763 	mov	dpl,r4
      0005A4 8E 83            [24] 1764 	mov	dph,r6
      0005A6 8F F0            [24] 1765 	mov	b,r7
      0005A8 12r00r00         [24] 1766 	lcall	_memcpy
                                   1767 ;	radio/packet.c:300: mav_pkt_len = 0;
      0005AB 78r04            [12] 1768 	mov	r0,#_mav_pkt_len
      0005AD E4               [12] 1769 	clr	a
      0005AE F2               [24] 1770 	movx	@r0,a
                                   1771 ;	radio/packet.c:301: return last_sent_len;
      0005AF 78r00            [12] 1772 	mov	r0,#_last_sent_len
      0005B1 E2               [24] 1773 	movx	a,@r0
      0005B2 F5 82            [12] 1774 	mov	dpl,a
      0005B4 22               [24] 1775 	ret
      0005B5                       1776 00130$:
                                   1777 ;	radio/packet.c:305: return 0;
      0005B5 75 82 00         [24] 1778 	mov	dpl,#0x00
      0005B8 22               [24] 1779 	ret
      0005B9                       1780 00132$:
                                   1781 ;	radio/packet.c:309: return mavlink_frame(max_xmit, buf);
      0005B9 78r11            [12] 1782 	mov	r0,#_packet_get_next_PARM_2
      0005BB 79r0F            [12] 1783 	mov	r1,#_mavlink_frame_PARM_2
      0005BD E2               [24] 1784 	movx	a,@r0
      0005BE F3               [24] 1785 	movx	@r1,a
      0005BF 08               [12] 1786 	inc	r0
      0005C0 E2               [24] 1787 	movx	a,@r0
      0005C1 09               [12] 1788 	inc	r1
      0005C2 F3               [24] 1789 	movx	@r1,a
      0005C3 85*0D 82         [24] 1790 	mov	dpl,_packet_get_next_max_xmit_1_163
      0005C6 02r01r24         [24] 1791 	ljmp	_mavlink_frame
                                   1792 ;	radio/packet.c:312: while (slen > 0) {
      0005C9                       1793 00179$:
      0005C9                       1794 00151$:
      0005C9 E5*0E            [12] 1795 	mov	a,_packet_get_next_slen_1_164
      0005CB 45*0F            [12] 1796 	orl	a,(_packet_get_next_slen_1_164 + 1)
      0005CD 70 03            [24] 1797 	jnz	00255$
      0005CF 02r07r6A         [24] 1798 	ljmp	00153$
      0005D2                       1799 00255$:
                                   1800 ;	radio/packet.c:313: register uint8_t c = serial_peek();
      0005D2 12r00r00         [24] 1801 	lcall	_serial_peek
      0005D5 AF 82            [24] 1802 	mov	r7,dpl
                                   1803 ;	radio/packet.c:314: if (c == MAVLINK10_STX) {
      0005D7 BF FE 02         [24] 1804 	cjne	r7,#0xFE,00256$
      0005DA 80 03            [24] 1805 	sjmp	00257$
      0005DC                       1806 00256$:
      0005DC 02r07r3B         [24] 1807 	ljmp	00149$
      0005DF                       1808 00257$:
                                   1809 ;	radio/packet.c:315: if (slen == 1) {
      0005DF 74 01            [12] 1810 	mov	a,#0x01
      0005E1 B5*0E 06         [24] 1811 	cjne	a,_packet_get_next_slen_1_164,00258$
      0005E4 E4               [12] 1812 	clr	a
      0005E5 B5*0F 02         [24] 1813 	cjne	a,(_packet_get_next_slen_1_164 + 1),00258$
      0005E8 80 02            [24] 1814 	sjmp	00259$
      0005EA                       1815 00258$:
      0005EA 80 2E            [24] 1816 	sjmp	00138$
      0005EC                       1817 00259$:
                                   1818 ;	radio/packet.c:317: if (last_sent_len == 0) {
      0005EC 78r00            [12] 1819 	mov	r0,#_last_sent_len
      0005EE E2               [24] 1820 	movx	a,@r0
      0005EF 60 03            [24] 1821 	jz	00260$
      0005F1 02r07r6A         [24] 1822 	ljmp	00153$
      0005F4                       1823 00260$:
                                   1824 ;	radio/packet.c:320: mav_pkt_len = 1;
      0005F4 78r04            [12] 1825 	mov	r0,#_mav_pkt_len
      0005F6 74 01            [12] 1826 	mov	a,#0x01
      0005F8 F2               [24] 1827 	movx	@r0,a
                                   1828 ;	radio/packet.c:321: mav_pkt_start_time = timer2_tick();
      0005F9 12r00r00         [24] 1829 	lcall	_timer2_tick
      0005FC E5 82            [12] 1830 	mov	a,dpl
      0005FE 85 83 F0         [24] 1831 	mov	b,dph
      000601 78r05            [12] 1832 	mov	r0,#_mav_pkt_start_time
      000603 F2               [24] 1833 	movx	@r0,a
      000604 08               [12] 1834 	inc	r0
      000605 E5 F0            [12] 1835 	mov	a,b
      000607 F2               [24] 1836 	movx	@r0,a
                                   1837 ;	radio/packet.c:322: mav_pkt_max_time = serial_rate;
      000608 78r02            [12] 1838 	mov	r0,#_serial_rate
      00060A E2               [24] 1839 	movx	a,@r0
      00060B FE               [12] 1840 	mov	r6,a
      00060C 08               [12] 1841 	inc	r0
      00060D E2               [24] 1842 	movx	a,@r0
      00060E FF               [12] 1843 	mov	r7,a
      00060F 78r07            [12] 1844 	mov	r0,#_mav_pkt_max_time
      000611 EE               [12] 1845 	mov	a,r6
      000612 F2               [24] 1846 	movx	@r0,a
      000613 08               [12] 1847 	inc	r0
      000614 EF               [12] 1848 	mov	a,r7
      000615 F2               [24] 1849 	movx	@r0,a
                                   1850 ;	radio/packet.c:323: return 0;
      000616 75 82 00         [24] 1851 	mov	dpl,#0x00
      000619 22               [24] 1852 	ret
                                   1853 ;	radio/packet.c:325: break;
      00061A                       1854 00138$:
                                   1855 ;	radio/packet.c:327: mav_pkt_len = serial_peek2();
      00061A 12r00r00         [24] 1856 	lcall	_serial_peek2
      00061D AF 82            [24] 1857 	mov	r7,dpl
      00061F 78r04            [12] 1858 	mov	r0,#_mav_pkt_len
      000621 EF               [12] 1859 	mov	a,r7
      000622 F2               [24] 1860 	movx	@r0,a
                                   1861 ;	radio/packet.c:328: if (mav_pkt_len >= 255-8 ||
      000623 BF F7 00         [24] 1862 	cjne	r7,#0xF7,00261$
      000626                       1863 00261$:
      000626 50 20            [24] 1864 	jnc	00139$
                                   1865 ;	radio/packet.c:329: mav_pkt_len+8 > mav_max_xmit) {
      000628 8F 05            [24] 1866 	mov	ar5,r7
      00062A 7E 00            [12] 1867 	mov	r6,#0x00
      00062C 74 08            [12] 1868 	mov	a,#0x08
      00062E 2D               [12] 1869 	add	a,r5
      00062F FD               [12] 1870 	mov	r5,a
      000630 E4               [12] 1871 	clr	a
      000631 3E               [12] 1872 	addc	a,r6
      000632 FE               [12] 1873 	mov	r6,a
      000633 78r09            [12] 1874 	mov	r0,#_mav_max_xmit
      000635 E2               [24] 1875 	movx	a,@r0
      000636 FB               [12] 1876 	mov	r3,a
      000637 7C 00            [12] 1877 	mov	r4,#0x00
      000639 C3               [12] 1878 	clr	c
      00063A EB               [12] 1879 	mov	a,r3
      00063B 9D               [12] 1880 	subb	a,r5
      00063C EC               [12] 1881 	mov	a,r4
      00063D 64 80            [12] 1882 	xrl	a,#0x80
      00063F 8E F0            [24] 1883 	mov	b,r6
      000641 63 F0 80         [24] 1884 	xrl	b,#0x80
      000644 95 F0            [12] 1885 	subb	a,b
      000646 50 33            [24] 1886 	jnc	00140$
      000648                       1887 00139$:
                                   1888 ;	radio/packet.c:331: mav_pkt_len = 0;
      000648 78r04            [12] 1889 	mov	r0,#_mav_pkt_len
      00064A E4               [12] 1890 	clr	a
      00064B F2               [24] 1891 	movx	@r0,a
                                   1892 ;	radio/packet.c:332: last_sent[last_sent_len++] = serial_read();
      00064C 78r00            [12] 1893 	mov	r0,#_last_sent_len
      00064E E2               [24] 1894 	movx	a,@r0
      00064F FE               [12] 1895 	mov	r6,a
      000650 78r00            [12] 1896 	mov	r0,#_last_sent_len
      000652 04               [12] 1897 	inc	a
      000653 F2               [24] 1898 	movx	@r0,a
      000654 EE               [12] 1899 	mov	a,r6
      000655 24rFC            [12] 1900 	add	a,#_last_sent
      000657 FE               [12] 1901 	mov	r6,a
      000658 E4               [12] 1902 	clr	a
      000659 34s00            [12] 1903 	addc	a,#(_last_sent >> 8)
      00065B FD               [12] 1904 	mov	r5,a
      00065C C0 06            [24] 1905 	push	ar6
      00065E C0 05            [24] 1906 	push	ar5
      000660 12r00r00         [24] 1907 	lcall	_serial_read
      000663 AC 82            [24] 1908 	mov	r4,dpl
      000665 D0 05            [24] 1909 	pop	ar5
      000667 D0 06            [24] 1910 	pop	ar6
      000669 8E 82            [24] 1911 	mov	dpl,r6
      00066B 8D 83            [24] 1912 	mov	dph,r5
      00066D EC               [12] 1913 	mov	a,r4
      00066E F0               [24] 1914 	movx	@dptr,a
                                   1915 ;	radio/packet.c:333: slen--;				
      00066F 15*0E            [12] 1916 	dec	_packet_get_next_slen_1_164
      000671 74 FF            [12] 1917 	mov	a,#0xFF
      000673 B5*0E 02         [24] 1918 	cjne	a,_packet_get_next_slen_1_164,00264$
      000676 15*0F            [12] 1919 	dec	(_packet_get_next_slen_1_164 + 1)
      000678                       1920 00264$:
                                   1921 ;	radio/packet.c:334: continue;
      000678 02r05rC9         [24] 1922 	ljmp	00151$
      00067B                       1923 00140$:
                                   1924 ;	radio/packet.c:339: mav_pkt_len += 8;
      00067B 74 08            [12] 1925 	mov	a,#0x08
      00067D 2F               [12] 1926 	add	a,r7
      00067E FF               [12] 1927 	mov	r7,a
      00067F 78r04            [12] 1928 	mov	r0,#_mav_pkt_len
      000681 F2               [24] 1929 	movx	@r0,a
                                   1930 ;	radio/packet.c:341: if (last_sent_len != 0) {
      000682 78r00            [12] 1931 	mov	r0,#_last_sent_len
      000684 E2               [24] 1932 	movx	a,@r0
      000685 60 62            [24] 1933 	jz	00146$
                                   1934 ;	radio/packet.c:345: memcpy(buf, last_sent, last_sent_len);
      000687 78r11            [12] 1935 	mov	r0,#_packet_get_next_PARM_2
      000689 E2               [24] 1936 	movx	a,@r0
      00068A FC               [12] 1937 	mov	r4,a
      00068B 08               [12] 1938 	inc	r0
      00068C E2               [24] 1939 	movx	a,@r0
      00068D FD               [12] 1940 	mov	r5,a
      00068E 7E 00            [12] 1941 	mov	r6,#0x00
      000690 90r00r00         [24] 1942 	mov	dptr,#_memcpy_PARM_2
      000693 74rFC            [12] 1943 	mov	a,#_last_sent
      000695 F0               [24] 1944 	movx	@dptr,a
      000696 74s00            [12] 1945 	mov	a,#(_last_sent >> 8)
      000698 A3               [24] 1946 	inc	dptr
      000699 F0               [24] 1947 	movx	@dptr,a
      00069A E4               [12] 1948 	clr	a
      00069B A3               [24] 1949 	inc	dptr
      00069C F0               [24] 1950 	movx	@dptr,a
      00069D 78r00            [12] 1951 	mov	r0,#_last_sent_len
      00069F 90r00r00         [24] 1952 	mov	dptr,#_memcpy_PARM_3
      0006A2 E2               [24] 1953 	movx	a,@r0
      0006A3 F0               [24] 1954 	movx	@dptr,a
      0006A4 E4               [12] 1955 	clr	a
      0006A5 A3               [24] 1956 	inc	dptr
      0006A6 F0               [24] 1957 	movx	@dptr,a
      0006A7 8C 82            [24] 1958 	mov	dpl,r4
      0006A9 8D 83            [24] 1959 	mov	dph,r5
      0006AB 8E F0            [24] 1960 	mov	b,r6
      0006AD 12r00r00         [24] 1961 	lcall	_memcpy
                                   1962 ;	radio/packet.c:346: mav_pkt_start_time = timer2_tick();
      0006B0 12r00r00         [24] 1963 	lcall	_timer2_tick
      0006B3 E5 82            [12] 1964 	mov	a,dpl
      0006B5 85 83 F0         [24] 1965 	mov	b,dph
      0006B8 78r05            [12] 1966 	mov	r0,#_mav_pkt_start_time
      0006BA F2               [24] 1967 	movx	@r0,a
      0006BB 08               [12] 1968 	inc	r0
      0006BC E5 F0            [12] 1969 	mov	a,b
      0006BE F2               [24] 1970 	movx	@r0,a
                                   1971 ;	radio/packet.c:347: mav_pkt_max_time = mav_pkt_len * serial_rate;
      0006BF 78r04            [12] 1972 	mov	r0,#_mav_pkt_len
      0006C1 E2               [24] 1973 	movx	a,@r0
      0006C2 FD               [12] 1974 	mov	r5,a
      0006C3 7E 00            [12] 1975 	mov	r6,#0x00
      0006C5 78r02            [12] 1976 	mov	r0,#_serial_rate
      0006C7 90r00r00         [24] 1977 	mov	dptr,#__mulint_PARM_2
      0006CA E2               [24] 1978 	movx	a,@r0
      0006CB F0               [24] 1979 	movx	@dptr,a
      0006CC 08               [12] 1980 	inc	r0
      0006CD E2               [24] 1981 	movx	a,@r0
      0006CE A3               [24] 1982 	inc	dptr
      0006CF F0               [24] 1983 	movx	@dptr,a
      0006D0 8D 82            [24] 1984 	mov	dpl,r5
      0006D2 8E 83            [24] 1985 	mov	dph,r6
      0006D4 12r00r00         [24] 1986 	lcall	__mulint
      0006D7 E5 82            [12] 1987 	mov	a,dpl
      0006D9 85 83 F0         [24] 1988 	mov	b,dph
      0006DC 78r07            [12] 1989 	mov	r0,#_mav_pkt_max_time
      0006DE F2               [24] 1990 	movx	@r0,a
      0006DF 08               [12] 1991 	inc	r0
      0006E0 E5 F0            [12] 1992 	mov	a,b
      0006E2 F2               [24] 1993 	movx	@r0,a
                                   1994 ;	radio/packet.c:348: return last_sent_len;
      0006E3 78r00            [12] 1995 	mov	r0,#_last_sent_len
      0006E5 E2               [24] 1996 	movx	a,@r0
      0006E6 F5 82            [12] 1997 	mov	dpl,a
      0006E8 22               [24] 1998 	ret
      0006E9                       1999 00146$:
                                   2000 ;	radio/packet.c:349: } else if (mav_pkt_len > slen) {
      0006E9 7E 00            [12] 2001 	mov	r6,#0x00
      0006EB C3               [12] 2002 	clr	c
      0006EC E5*0E            [12] 2003 	mov	a,_packet_get_next_slen_1_164
      0006EE 9F               [12] 2004 	subb	a,r7
      0006EF E5*0F            [12] 2005 	mov	a,(_packet_get_next_slen_1_164 + 1)
      0006F1 9E               [12] 2006 	subb	a,r6
      0006F2 50 37            [24] 2007 	jnc	00143$
                                   2008 ;	radio/packet.c:352: mav_pkt_start_time = timer2_tick();
      0006F4 12r00r00         [24] 2009 	lcall	_timer2_tick
      0006F7 E5 82            [12] 2010 	mov	a,dpl
      0006F9 85 83 F0         [24] 2011 	mov	b,dph
      0006FC 78r05            [12] 2012 	mov	r0,#_mav_pkt_start_time
      0006FE F2               [24] 2013 	movx	@r0,a
      0006FF 08               [12] 2014 	inc	r0
      000700 E5 F0            [12] 2015 	mov	a,b
      000702 F2               [24] 2016 	movx	@r0,a
                                   2017 ;	radio/packet.c:353: mav_pkt_max_time = mav_pkt_len * serial_rate;
      000703 78r04            [12] 2018 	mov	r0,#_mav_pkt_len
      000705 E2               [24] 2019 	movx	a,@r0
      000706 FE               [12] 2020 	mov	r6,a
      000707 7F 00            [12] 2021 	mov	r7,#0x00
      000709 78r02            [12] 2022 	mov	r0,#_serial_rate
      00070B 90r00r00         [24] 2023 	mov	dptr,#__mulint_PARM_2
      00070E E2               [24] 2024 	movx	a,@r0
      00070F F0               [24] 2025 	movx	@dptr,a
      000710 08               [12] 2026 	inc	r0
      000711 E2               [24] 2027 	movx	a,@r0
      000712 A3               [24] 2028 	inc	dptr
      000713 F0               [24] 2029 	movx	@dptr,a
      000714 8E 82            [24] 2030 	mov	dpl,r6
      000716 8F 83            [24] 2031 	mov	dph,r7
      000718 12r00r00         [24] 2032 	lcall	__mulint
      00071B E5 82            [12] 2033 	mov	a,dpl
      00071D 85 83 F0         [24] 2034 	mov	b,dph
      000720 78r07            [12] 2035 	mov	r0,#_mav_pkt_max_time
      000722 F2               [24] 2036 	movx	@r0,a
      000723 08               [12] 2037 	inc	r0
      000724 E5 F0            [12] 2038 	mov	a,b
      000726 F2               [24] 2039 	movx	@r0,a
                                   2040 ;	radio/packet.c:354: return 0;					
      000727 75 82 00         [24] 2041 	mov	dpl,#0x00
      00072A 22               [24] 2042 	ret
      00072B                       2043 00143$:
                                   2044 ;	radio/packet.c:358: return mavlink_frame(max_xmit, buf);
      00072B 78r11            [12] 2045 	mov	r0,#_packet_get_next_PARM_2
      00072D 79r0F            [12] 2046 	mov	r1,#_mavlink_frame_PARM_2
      00072F E2               [24] 2047 	movx	a,@r0
      000730 F3               [24] 2048 	movx	@r1,a
      000731 08               [12] 2049 	inc	r0
      000732 E2               [24] 2050 	movx	a,@r0
      000733 09               [12] 2051 	inc	r1
      000734 F3               [24] 2052 	movx	@r1,a
      000735 85*0D 82         [24] 2053 	mov	dpl,_packet_get_next_max_xmit_1_163
      000738 02r01r24         [24] 2054 	ljmp	_mavlink_frame
      00073B                       2055 00149$:
                                   2056 ;	radio/packet.c:361: last_sent[last_sent_len++] = serial_read();
      00073B 78r00            [12] 2057 	mov	r0,#_last_sent_len
      00073D E2               [24] 2058 	movx	a,@r0
      00073E FF               [12] 2059 	mov	r7,a
      00073F 78r00            [12] 2060 	mov	r0,#_last_sent_len
      000741 04               [12] 2061 	inc	a
      000742 F2               [24] 2062 	movx	@r0,a
      000743 EF               [12] 2063 	mov	a,r7
      000744 24rFC            [12] 2064 	add	a,#_last_sent
      000746 FF               [12] 2065 	mov	r7,a
      000747 E4               [12] 2066 	clr	a
      000748 34s00            [12] 2067 	addc	a,#(_last_sent >> 8)
      00074A FE               [12] 2068 	mov	r6,a
      00074B C0 07            [24] 2069 	push	ar7
      00074D C0 06            [24] 2070 	push	ar6
      00074F 12r00r00         [24] 2071 	lcall	_serial_read
      000752 AD 82            [24] 2072 	mov	r5,dpl
      000754 D0 06            [24] 2073 	pop	ar6
      000756 D0 07            [24] 2074 	pop	ar7
      000758 8F 82            [24] 2075 	mov	dpl,r7
      00075A 8E 83            [24] 2076 	mov	dph,r6
      00075C ED               [12] 2077 	mov	a,r5
      00075D F0               [24] 2078 	movx	@dptr,a
                                   2079 ;	radio/packet.c:362: slen--;
      00075E 15*0E            [12] 2080 	dec	_packet_get_next_slen_1_164
      000760 74 FF            [12] 2081 	mov	a,#0xFF
      000762 B5*0E 02         [24] 2082 	cjne	a,_packet_get_next_slen_1_164,00267$
      000765 15*0F            [12] 2083 	dec	(_packet_get_next_slen_1_164 + 1)
      000767                       2084 00267$:
      000767 02r05rC9         [24] 2085 	ljmp	00151$
      00076A                       2086 00153$:
                                   2087 ;	radio/packet.c:366: memcpy(buf, last_sent, last_sent_len);
      00076A 78r11            [12] 2088 	mov	r0,#_packet_get_next_PARM_2
      00076C E2               [24] 2089 	movx	a,@r0
      00076D FD               [12] 2090 	mov	r5,a
      00076E 08               [12] 2091 	inc	r0
      00076F E2               [24] 2092 	movx	a,@r0
      000770 FE               [12] 2093 	mov	r6,a
      000771 7F 00            [12] 2094 	mov	r7,#0x00
      000773 90r00r00         [24] 2095 	mov	dptr,#_memcpy_PARM_2
      000776 74rFC            [12] 2096 	mov	a,#_last_sent
      000778 F0               [24] 2097 	movx	@dptr,a
      000779 74s00            [12] 2098 	mov	a,#(_last_sent >> 8)
      00077B A3               [24] 2099 	inc	dptr
      00077C F0               [24] 2100 	movx	@dptr,a
      00077D E4               [12] 2101 	clr	a
      00077E A3               [24] 2102 	inc	dptr
      00077F F0               [24] 2103 	movx	@dptr,a
      000780 78r00            [12] 2104 	mov	r0,#_last_sent_len
      000782 90r00r00         [24] 2105 	mov	dptr,#_memcpy_PARM_3
      000785 E2               [24] 2106 	movx	a,@r0
      000786 F0               [24] 2107 	movx	@dptr,a
      000787 E4               [12] 2108 	clr	a
      000788 A3               [24] 2109 	inc	dptr
      000789 F0               [24] 2110 	movx	@dptr,a
      00078A 8D 82            [24] 2111 	mov	dpl,r5
      00078C 8E 83            [24] 2112 	mov	dph,r6
      00078E 8F F0            [24] 2113 	mov	b,r7
      000790 12r00r00         [24] 2114 	lcall	_memcpy
                                   2115 ;	radio/packet.c:367: return last_sent_len;
      000793 78r00            [12] 2116 	mov	r0,#_last_sent_len
      000795 E2               [24] 2117 	movx	a,@r0
      000796 F5 82            [12] 2118 	mov	dpl,a
      000798 22               [24] 2119 	ret
                                   2120 ;------------------------------------------------------------
                                   2121 ;Allocation info for local variables in function 'packet_is_resend'
                                   2122 ;------------------------------------------------------------
                                   2123 ;	radio/packet.c:373: packet_is_resend(void)
                                   2124 ;	-----------------------------------------
                                   2125 ;	 function packet_is_resend
                                   2126 ;	-----------------------------------------
      000799                       2127 _packet_is_resend:
                                   2128 ;	radio/packet.c:375: return last_sent_is_resend;
      000799 A2*00            [12] 2129 	mov	c,_last_sent_is_resend
      00079B 22               [24] 2130 	ret
                                   2131 ;------------------------------------------------------------
                                   2132 ;Allocation info for local variables in function 'packet_is_injected'
                                   2133 ;------------------------------------------------------------
                                   2134 ;	radio/packet.c:381: packet_is_injected(void)
                                   2135 ;	-----------------------------------------
                                   2136 ;	 function packet_is_injected
                                   2137 ;	-----------------------------------------
      00079C                       2138 _packet_is_injected:
                                   2139 ;	radio/packet.c:383: return last_sent_is_injected;
      00079C A2*01            [12] 2140 	mov	c,_last_sent_is_injected
      00079E 22               [24] 2141 	ret
                                   2142 ;------------------------------------------------------------
                                   2143 ;Allocation info for local variables in function 'packet_force_resend'
                                   2144 ;------------------------------------------------------------
                                   2145 ;	radio/packet.c:388: packet_force_resend(void)
                                   2146 ;	-----------------------------------------
                                   2147 ;	 function packet_force_resend
                                   2148 ;	-----------------------------------------
      00079F                       2149 _packet_force_resend:
                                   2150 ;	radio/packet.c:390: force_resend = true;
      00079F D2*03            [12] 2151 	setb	_force_resend
      0007A1 22               [24] 2152 	ret
                                   2153 ;------------------------------------------------------------
                                   2154 ;Allocation info for local variables in function 'packet_set_max_xmit'
                                   2155 ;------------------------------------------------------------
                                   2156 ;max                       Allocated with name '_packet_set_max_xmit_max_1_195'
                                   2157 ;------------------------------------------------------------
                                   2158 ;	radio/packet.c:395: packet_set_max_xmit(uint8_t max)
                                   2159 ;	-----------------------------------------
                                   2160 ;	 function packet_set_max_xmit
                                   2161 ;	-----------------------------------------
      0007A2                       2162 _packet_set_max_xmit:
      0007A2 E5 82            [12] 2163 	mov	a,dpl
      0007A4 90r01rF9         [24] 2164 	mov	dptr,#_packet_set_max_xmit_max_1_195
      0007A7 F0               [24] 2165 	movx	@dptr,a
                                   2166 ;	radio/packet.c:397: mav_max_xmit = max;
      0007A8 E0               [24] 2167 	movx	a,@dptr
      0007A9 78r09            [12] 2168 	mov	r0,#_mav_max_xmit
      0007AB F2               [24] 2169 	movx	@r0,a
      0007AC 22               [24] 2170 	ret
                                   2171 ;------------------------------------------------------------
                                   2172 ;Allocation info for local variables in function 'packet_set_serial_speed'
                                   2173 ;------------------------------------------------------------
                                   2174 ;speed                     Allocated with name '_packet_set_serial_speed_speed_1_197'
                                   2175 ;------------------------------------------------------------
                                   2176 ;	radio/packet.c:402: packet_set_serial_speed(uint16_t speed)
                                   2177 ;	-----------------------------------------
                                   2178 ;	 function packet_set_serial_speed
                                   2179 ;	-----------------------------------------
      0007AD                       2180 _packet_set_serial_speed:
      0007AD AF 83            [24] 2181 	mov	r7,dph
      0007AF E5 82            [12] 2182 	mov	a,dpl
      0007B1 90r01rFA         [24] 2183 	mov	dptr,#_packet_set_serial_speed_speed_1_197
      0007B4 F0               [24] 2184 	movx	@dptr,a
      0007B5 EF               [12] 2185 	mov	a,r7
      0007B6 A3               [24] 2186 	inc	dptr
      0007B7 F0               [24] 2187 	movx	@dptr,a
                                   2188 ;	radio/packet.c:405: serial_rate = (65536UL / speed) + 1;
      0007B8 90r01rFA         [24] 2189 	mov	dptr,#_packet_set_serial_speed_speed_1_197
      0007BB E0               [24] 2190 	movx	a,@dptr
      0007BC FE               [12] 2191 	mov	r6,a
      0007BD A3               [24] 2192 	inc	dptr
      0007BE E0               [24] 2193 	movx	a,@dptr
      0007BF FF               [12] 2194 	mov	r7,a
      0007C0 90r00r00         [24] 2195 	mov	dptr,#__divulong_PARM_2
      0007C3 EE               [12] 2196 	mov	a,r6
      0007C4 F0               [24] 2197 	movx	@dptr,a
      0007C5 EF               [12] 2198 	mov	a,r7
      0007C6 A3               [24] 2199 	inc	dptr
      0007C7 F0               [24] 2200 	movx	@dptr,a
      0007C8 E4               [12] 2201 	clr	a
      0007C9 A3               [24] 2202 	inc	dptr
      0007CA F0               [24] 2203 	movx	@dptr,a
      0007CB A3               [24] 2204 	inc	dptr
      0007CC F0               [24] 2205 	movx	@dptr,a
      0007CD 90 00 00         [24] 2206 	mov	dptr,#0x0000
      0007D0 75 F0 01         [24] 2207 	mov	b,#0x01
      0007D3 E4               [12] 2208 	clr	a
      0007D4 12r00r00         [24] 2209 	lcall	__divulong
      0007D7 AC 82            [24] 2210 	mov	r4,dpl
      0007D9 AD 83            [24] 2211 	mov	r5,dph
      0007DB AE F0            [24] 2212 	mov	r6,b
      0007DD FF               [12] 2213 	mov	r7,a
      0007DE 0C               [12] 2214 	inc	r4
      0007DF BC 00 09         [24] 2215 	cjne	r4,#0x00,00103$
      0007E2 0D               [12] 2216 	inc	r5
      0007E3 BD 00 05         [24] 2217 	cjne	r5,#0x00,00103$
      0007E6 0E               [12] 2218 	inc	r6
      0007E7 BE 00 01         [24] 2219 	cjne	r6,#0x00,00103$
      0007EA 0F               [12] 2220 	inc	r7
      0007EB                       2221 00103$:
      0007EB 78r02            [12] 2222 	mov	r0,#_serial_rate
      0007ED EC               [12] 2223 	mov	a,r4
      0007EE F2               [24] 2224 	movx	@r0,a
      0007EF 08               [12] 2225 	inc	r0
      0007F0 ED               [12] 2226 	mov	a,r5
      0007F1 F2               [24] 2227 	movx	@r0,a
      0007F2 22               [24] 2228 	ret
                                   2229 ;------------------------------------------------------------
                                   2230 ;Allocation info for local variables in function 'packet_is_duplicate'
                                   2231 ;------------------------------------------------------------
                                   2232 ;len                       Allocated with name '_packet_is_duplicate_len_1_199'
                                   2233 ;------------------------------------------------------------
                                   2234 ;	radio/packet.c:410: packet_is_duplicate(uint8_t len, __xdata uint8_t * __pdata buf, bool is_resend)
                                   2235 ;	-----------------------------------------
                                   2236 ;	 function packet_is_duplicate
                                   2237 ;	-----------------------------------------
      0007F3                       2238 _packet_is_duplicate:
      0007F3 E5 82            [12] 2239 	mov	a,dpl
      0007F5 90r01rFC         [24] 2240 	mov	dptr,#_packet_is_duplicate_len_1_199
      0007F8 F0               [24] 2241 	movx	@dptr,a
                                   2242 ;	radio/packet.c:412: if (!is_resend) {
      0007F9 20*06 39         [24] 2243 	jb	_packet_is_duplicate_PARM_3,00102$
                                   2244 ;	radio/packet.c:413: memcpy(last_received, buf, len);
      0007FC 78r13            [12] 2245 	mov	r0,#_packet_is_duplicate_PARM_2
      0007FE E2               [24] 2246 	movx	a,@r0
      0007FF FD               [12] 2247 	mov	r5,a
      000800 08               [12] 2248 	inc	r0
      000801 E2               [24] 2249 	movx	a,@r0
      000802 FE               [12] 2250 	mov	r6,a
      000803 7F 00            [12] 2251 	mov	r7,#0x00
      000805 90r01rFC         [24] 2252 	mov	dptr,#_packet_is_duplicate_len_1_199
      000808 E0               [24] 2253 	movx	a,@dptr
      000809 FC               [12] 2254 	mov	r4,a
      00080A FA               [12] 2255 	mov	r2,a
      00080B 7B 00            [12] 2256 	mov	r3,#0x00
      00080D 90r00r00         [24] 2257 	mov	dptr,#_memcpy_PARM_2
      000810 ED               [12] 2258 	mov	a,r5
      000811 F0               [24] 2259 	movx	@dptr,a
      000812 EE               [12] 2260 	mov	a,r6
      000813 A3               [24] 2261 	inc	dptr
      000814 F0               [24] 2262 	movx	@dptr,a
      000815 EF               [12] 2263 	mov	a,r7
      000816 A3               [24] 2264 	inc	dptr
      000817 F0               [24] 2265 	movx	@dptr,a
      000818 90r00r00         [24] 2266 	mov	dptr,#_memcpy_PARM_3
      00081B EA               [12] 2267 	mov	a,r2
      00081C F0               [24] 2268 	movx	@dptr,a
      00081D EB               [12] 2269 	mov	a,r3
      00081E A3               [24] 2270 	inc	dptr
      00081F F0               [24] 2271 	movx	@dptr,a
      000820 90r00r00         [24] 2272 	mov	dptr,#_last_received
      000823 75 F0 00         [24] 2273 	mov	b,#0x00
      000826 C0 04            [24] 2274 	push	ar4
      000828 12r00r00         [24] 2275 	lcall	_memcpy
      00082B D0 04            [24] 2276 	pop	ar4
                                   2277 ;	radio/packet.c:414: last_recv_len = len;
      00082D 78r01            [12] 2278 	mov	r0,#_last_recv_len
      00082F EC               [12] 2279 	mov	a,r4
      000830 F2               [24] 2280 	movx	@r0,a
                                   2281 ;	radio/packet.c:415: last_recv_is_resend = false;
      000831 C2*02            [12] 2282 	clr	_last_recv_is_resend
                                   2283 ;	radio/packet.c:416: return false;
      000833 C3               [12] 2284 	clr	c
      000834 22               [24] 2285 	ret
      000835                       2286 00102$:
                                   2287 ;	radio/packet.c:420: memcmp(last_received, buf, len) == 0) {
      000835 20*02 37         [24] 2288 	jb	_last_recv_is_resend,00104$
                                   2289 ;	radio/packet.c:419: len == last_recv_len &&
      000838 90r01rFC         [24] 2290 	mov	dptr,#_packet_is_duplicate_len_1_199
      00083B E0               [24] 2291 	movx	a,@dptr
      00083C FF               [12] 2292 	mov	r7,a
      00083D 78r01            [12] 2293 	mov	r0,#_last_recv_len
      00083F E2               [24] 2294 	movx	a,@r0
      000840 B5 07 2C         [24] 2295 	cjne	a,ar7,00104$
                                   2296 ;	radio/packet.c:420: memcmp(last_received, buf, len) == 0) {
      000843 78r13            [12] 2297 	mov	r0,#_packet_is_duplicate_PARM_2
      000845 90r00r00         [24] 2298 	mov	dptr,#_memcmp_PARM_2
      000848 E2               [24] 2299 	movx	a,@r0
      000849 F0               [24] 2300 	movx	@dptr,a
      00084A 08               [12] 2301 	inc	r0
      00084B E2               [24] 2302 	movx	a,@r0
      00084C A3               [24] 2303 	inc	dptr
      00084D F0               [24] 2304 	movx	@dptr,a
      00084E E4               [12] 2305 	clr	a
      00084F A3               [24] 2306 	inc	dptr
      000850 F0               [24] 2307 	movx	@dptr,a
      000851 90r00r00         [24] 2308 	mov	dptr,#_memcmp_PARM_3
      000854 EF               [12] 2309 	mov	a,r7
      000855 F0               [24] 2310 	movx	@dptr,a
      000856 E4               [12] 2311 	clr	a
      000857 A3               [24] 2312 	inc	dptr
      000858 F0               [24] 2313 	movx	@dptr,a
      000859 90r00r00         [24] 2314 	mov	dptr,#_last_received
      00085C 75 F0 00         [24] 2315 	mov	b,#0x00
      00085F 12r00r00         [24] 2316 	lcall	_memcmp
      000862 E5 82            [12] 2317 	mov	a,dpl
      000864 85 83 F0         [24] 2318 	mov	b,dph
      000867 45 F0            [12] 2319 	orl	a,b
      000869 70 04            [24] 2320 	jnz	00104$
                                   2321 ;	radio/packet.c:421: last_recv_is_resend = false;
      00086B C2*02            [12] 2322 	clr	_last_recv_is_resend
                                   2323 ;	radio/packet.c:422: return true;
      00086D D3               [12] 2324 	setb	c
      00086E 22               [24] 2325 	ret
      00086F                       2326 00104$:
                                   2327 ;	radio/packet.c:430: last_recv_is_resend = true;
      00086F D2*02            [12] 2328 	setb	_last_recv_is_resend
                                   2329 ;	radio/packet.c:431: return false;
      000871 C3               [12] 2330 	clr	c
      000872 22               [24] 2331 	ret
                                   2332 ;------------------------------------------------------------
                                   2333 ;Allocation info for local variables in function 'packet_ati5_inject'
                                   2334 ;------------------------------------------------------------
                                   2335 ;	radio/packet.c:436: packet_ati5_inject(__pdata uint8_t ati5_id)
                                   2336 ;	-----------------------------------------
                                   2337 ;	 function packet_ati5_inject
                                   2338 ;	-----------------------------------------
      000873                       2339 _packet_ati5_inject:
      000873 AF 82            [24] 2340 	mov	r7,dpl
                                   2341 ;	radio/packet.c:438: if (ati5_id < PARAM_MAX) {
      000875 BF 13 00         [24] 2342 	cjne	r7,#0x13,00113$
      000878                       2343 00113$:
      000878 50 25            [24] 2344 	jnc	00105$
                                   2345 ;	radio/packet.c:439: printf_start_capture(last_sent, sizeof(last_sent));
      00087A 90r00r00         [24] 2346 	mov	dptr,#_printf_start_capture_PARM_2
      00087D 74 FC            [12] 2347 	mov	a,#0xFC
      00087F F0               [24] 2348 	movx	@dptr,a
      000880 90r00rFC         [24] 2349 	mov	dptr,#_last_sent
      000883 C0 07            [24] 2350 	push	ar7
      000885 12r00r00         [24] 2351 	lcall	_printf_start_capture
      000888 D0 07            [24] 2352 	pop	ar7
                                   2353 ;	radio/packet.c:440: param_print(ati5_id);
      00088A 8F 82            [24] 2354 	mov	dpl,r7
      00088C 12r00r00         [24] 2355 	lcall	_param_print
                                   2356 ;	radio/packet.c:441: last_sent_len = printf_end_capture();
      00088F 12r00r00         [24] 2357 	lcall	_printf_end_capture
      000892 AF 82            [24] 2358 	mov	r7,dpl
      000894 78r00            [12] 2359 	mov	r0,#_last_sent_len
      000896 EF               [12] 2360 	mov	a,r7
      000897 F2               [24] 2361 	movx	@r0,a
                                   2362 ;	radio/packet.c:443: if(last_sent_len>0)
      000898 EF               [12] 2363 	mov	a,r7
      000899 60 04            [24] 2364 	jz	00105$
                                   2365 ;	radio/packet.c:445: last_sent_is_resend = false;
      00089B C2*00            [12] 2366 	clr	_last_sent_is_resend
                                   2367 ;	radio/packet.c:446: injected_packet = true;
      00089D D2*04            [12] 2368 	setb	_injected_packet
      00089F                       2369 00105$:
      00089F 22               [24] 2370 	ret
                                   2371 ;------------------------------------------------------------
                                   2372 ;Allocation info for local variables in function 'packet_at_inject'
                                   2373 ;------------------------------------------------------------
                                   2374 ;	radio/packet.c:458: packet_at_inject(void)
                                   2375 ;	-----------------------------------------
                                   2376 ;	 function packet_at_inject
                                   2377 ;	-----------------------------------------
      0008A0                       2378 _packet_at_inject:
                                   2379 ;	radio/packet.c:460: at_cmd_ready = true;
      0008A0 D2*00            [12] 2380 	setb	_at_cmd_ready
                                   2381 ;	radio/packet.c:461: printf_start_capture(last_sent, sizeof(last_sent));
      0008A2 90r00r00         [24] 2382 	mov	dptr,#_printf_start_capture_PARM_2
      0008A5 74 FC            [12] 2383 	mov	a,#0xFC
      0008A7 F0               [24] 2384 	movx	@dptr,a
      0008A8 90r00rFC         [24] 2385 	mov	dptr,#_last_sent
      0008AB 12r00r00         [24] 2386 	lcall	_printf_start_capture
                                   2387 ;	radio/packet.c:462: at_command();
      0008AE 12r00r00         [24] 2388 	lcall	_at_command
                                   2389 ;	radio/packet.c:463: last_sent_len = printf_end_capture();
      0008B1 12r00r00         [24] 2390 	lcall	_printf_end_capture
      0008B4 AF 82            [24] 2391 	mov	r7,dpl
      0008B6 78r00            [12] 2392 	mov	r0,#_last_sent_len
      0008B8 EF               [12] 2393 	mov	a,r7
      0008B9 F2               [24] 2394 	movx	@r0,a
                                   2395 ;	radio/packet.c:465: if (last_sent_len > 0)
      0008BA EF               [12] 2396 	mov	a,r7
      0008BB 60 04            [24] 2397 	jz	00103$
                                   2398 ;	radio/packet.c:467: last_sent_is_resend = false;
      0008BD C2*00            [12] 2399 	clr	_last_sent_is_resend
                                   2400 ;	radio/packet.c:468: injected_packet = true;
      0008BF D2*04            [12] 2401 	setb	_injected_packet
      0008C1                       2402 00103$:
      0008C1 22               [24] 2403 	ret
                                   2404 ;------------------------------------------------------------
                                   2405 ;Allocation info for local variables in function 'packet_inject'
                                   2406 ;------------------------------------------------------------
                                   2407 ;	radio/packet.c:474: packet_inject(__xdata uint8_t * __pdata buf, __pdata uint8_t len)
                                   2408 ;	-----------------------------------------
                                   2409 ;	 function packet_inject
                                   2410 ;	-----------------------------------------
      0008C2                       2411 _packet_inject:
      0008C2 AE 82            [24] 2412 	mov	r6,dpl
      0008C4 AF 83            [24] 2413 	mov	r7,dph
                                   2414 ;	radio/packet.c:476: if (len > sizeof(last_sent)) {
      0008C6 78r15            [12] 2415 	mov	r0,#_packet_inject_PARM_2
      0008C8 C3               [12] 2416 	clr	c
      0008C9 E2               [24] 2417 	movx	a,@r0
      0008CA F5 F0            [12] 2418 	mov	b,a
      0008CC 74 FC            [12] 2419 	mov	a,#0xFC
      0008CE 95 F0            [12] 2420 	subb	a,b
      0008D0 50 05            [24] 2421 	jnc	00102$
                                   2422 ;	radio/packet.c:477: len = sizeof(last_sent);
      0008D2 78r15            [12] 2423 	mov	r0,#_packet_inject_PARM_2
      0008D4 74 FC            [12] 2424 	mov	a,#0xFC
      0008D6 F2               [24] 2425 	movx	@r0,a
      0008D7                       2426 00102$:
                                   2427 ;	radio/packet.c:479: memcpy(last_sent, buf, len);
      0008D7 90r00r00         [24] 2428 	mov	dptr,#_memcpy_PARM_2
      0008DA EE               [12] 2429 	mov	a,r6
      0008DB F0               [24] 2430 	movx	@dptr,a
      0008DC EF               [12] 2431 	mov	a,r7
      0008DD A3               [24] 2432 	inc	dptr
      0008DE F0               [24] 2433 	movx	@dptr,a
      0008DF E4               [12] 2434 	clr	a
      0008E0 A3               [24] 2435 	inc	dptr
      0008E1 F0               [24] 2436 	movx	@dptr,a
      0008E2 78r15            [12] 2437 	mov	r0,#_packet_inject_PARM_2
      0008E4 90r00r00         [24] 2438 	mov	dptr,#_memcpy_PARM_3
      0008E7 E2               [24] 2439 	movx	a,@r0
      0008E8 F0               [24] 2440 	movx	@dptr,a
      0008E9 E4               [12] 2441 	clr	a
      0008EA A3               [24] 2442 	inc	dptr
      0008EB F0               [24] 2443 	movx	@dptr,a
      0008EC 90r00rFC         [24] 2444 	mov	dptr,#_last_sent
      0008EF 75 F0 00         [24] 2445 	mov	b,#0x00
      0008F2 12r00r00         [24] 2446 	lcall	_memcpy
                                   2447 ;	radio/packet.c:480: last_sent_len = len;
      0008F5 78r15            [12] 2448 	mov	r0,#_packet_inject_PARM_2
      0008F7 E2               [24] 2449 	movx	a,@r0
      0008F8 78r00            [12] 2450 	mov	r0,#_last_sent_len
      0008FA F2               [24] 2451 	movx	@r0,a
                                   2452 ;	radio/packet.c:481: last_sent_is_resend = false;
      0008FB C2*00            [12] 2453 	clr	_last_sent_is_resend
                                   2454 ;	radio/packet.c:482: injected_packet = true;
      0008FD D2*04            [12] 2455 	setb	_injected_packet
      0008FF 22               [24] 2456 	ret
                                   2457 	.area CSEG    (CODE)
                                   2458 	.area CONST   (CODE)
                                   2459 	.area XINIT   (CODE)
                                   2460 	.area CABS    (ABS,CODE)
